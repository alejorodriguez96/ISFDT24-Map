{"version":3,"sources":["theme.js","carreras.js","data/ingles.js","constants.js","Contexts.js","components/CategoryTagStack.js","components/LoadingGraph.js","components/Body.js","components/useWindowSize.js","components/Footer.js","components/MateriaMenu.js","components/UserMenu.js","components/PadronInput.js","components/Header.js","components/MainApp.js","Node.js","useGraph.js","useLogin.js","index.js"],"names":["COLORS","headerbg","graphbg","headerbgdark","graphbgdark","text","textdark","electivas","50","400","500","aprobadas","100","600","habilitadas","obligatorias","findecarrera","enfinal","cursando","futuro","200","300","700","800","900","1000","orientacion1","orientacion2","orientacion3","orientacion4","orientacion5","orientacion6","orientacion7","orientacion8","customTheme","extendTheme","fonts","body","heading","mono","colors","config","initialColorMode","CARRERAS","id","link","graph","materia","creditos","categoria","title","level","correlativas","nombre","nombrecorto","total","checkbox","bg","color","materias","USER_FORM_ENTRIES","GRAPH_FORM_ENTRIES","BUGS_FORM_ENTRIES","SPREADSHEET","SHEETS","KEY","GRUPOS","Aprobadas","CBC","shape","size","Habilitadas","Cursando","filter","c","orientaciones","flatMap","reduce","map","obj","colorScheme","GRAPHOPTIONS","nodes","interaction","hover","physics","enabled","hierarchicalRepulsion","nodeDistance","stabilization","iterations","fit","layout","hierarchical","levelSeparation","treeSpacing","edgeMinimization","direction","edges","arrowStrikethrough","arrows","to","scaleFactor","type","inherit","groups","UserContext","React","createContext","GraphContext","CategoryTagStack","props","useContext","toggleGroup","isGroupHidden","toggleElectivas","electivasStatus","useState","key","setKey","categorias","distinct","columns","length","mb","ml","spacing","bottom","position","cursor","C","onClick","as","Add","mr","Minus","AddIcon","MinusIcon","LoadingGraph","style","styleElement","document","createElement","styleSheet","head","appendChild","sheet","insertRule","cssRules","injectStyle","isOpen","top","left","animation","useColorModeValue","h","w","Body","aprobar","setNetwork","redraw","setNodes","setEdges","desaprobar","getNode","loadingGraph","network","openCBC","user","logged","submitBug","setDisplayedNode","toast","useToast","bugToast","useRef","showGracias","setShowGracias","useColorMode","colorMode","toggleColorMode","ref","useResizeObserver","width","height","useEffect","events","click","e","node","aprobada","doubleClick","hold","nota","hoverNode","neighborEdges","getConnectedEdges","allOtherEdges","get","edge","includes","update","dashes","opacity","blurNode","css","outline","flexGrow","in","unmountOnExit","carrera","getNetwork","r","getNodes","getEdges","options","textAlign","right","label","placement","Moon","Sun","isExternal","href","boxSize","viewBox","fill","d","mt","variant","close","current","render","borderRadius","p","borderColor","borderWidth","flex","px","display","onSubmit","t","preventDefault","target","elements","value","alignItems","resize","focusBorderColor","name","icon","Chat","fontSize","_hover","ExternalLink","mx","status","duration","isClosable","CheckIcon","ChatIcon","useWindowSize","undefined","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Footer","promedio","stats","toggleCheckbox","optativas","addOptativa","aplazos","setAplazos","promedioConAplazos","promedioConCBC","editOptativa","removeOptativa","mobile","EditableControls","useEditableControls","isEditing","getSubmitButtonProps","getEditButtonProps","defaultValue","optativa","maxW","min","onChange","_","isReadOnly","Check","Edit","SmallClose","my","materiasAprobadas","creditosTotales","templateColumns","colSpan","proportion","trigger","creditosNecesarios","alignSelf","Math","round","hasStripe","backgroundColor","max","border","isIndeterminate","check","isChecked","eligeOrientaciones","orientacion","finDeCarrera","o","m","isPreviewFocusable","submitOnBlur","pl","float","PlusSquare","justifyContent","v","parseFloat","toString","Header","cuatri","displayedNode","moreOptionsOpen","setMoreOptionsOpen","isTruncated","closeOnClick","hasArrow","margin","errorBorderColor","inputMode","_focus","fontWeight","borderLeft","borderRight","Close","transform","ArrowRight","ArrowLeft","children","UserMenu","logout","setFirstTime","changeOrientacion","changeFinDeCarrera","OrientacionesMenuGroup","nonEligible","defaultIsOpen","closeOnSelect","Button","leftIcon","Settings","padron","Object","values","PadronInput","login","loading","saving","register","padronInput","setPadronInput","autosave","setAutosave","saveGraph","notRegistered","setNotRegistered","lastInput","setLastInput","showRegisterButton","a","align","isLoading","placeholder","isDisabled","CheckCircle","changeCarrera","zIndex","justify","padding","MateriaMenu","isLazy","_expanded","py","ChevronDown","MainApp","breakWords","string","broken","split","forEach","element","trim","Node","n","this","nodeRef","assign","group","requiere","hidden","ctx","from","getConnectedNodes","totalCreditos","fields","acc","todoAprobado","i","showLabels","grupoDefault","isHabilitada","labelDefault","font","materiasCBC","sumCBC","promedioCBC","toFixed","lastLevel","graphObj","useGraph","loginHook","setGraph","setPromedio","setCreditos","setStats","shouldLoadGraph","setShouldLoadGraph","setLoadingGraph","firstTime","setUser","getGraph","postGraph","setOptativas","actualizar","getPromedio","getCreditos","then","metadata","toUpdate","push","checkboxes","flat","catch","rest","find","userdata","allLogins","l","carreraid","orientacionid","findecarreraid","graphNodes","graphEdges","Array","Set","balanceShownElectivas","ch","sum","accumulator","getCorrectCreditos","isNaN","totalNecesarios","grupo","fullProportion","Boolean","sort","b","nodeA","nodeB","groupOrder","indexOf","counter","addLevel","ids","findIndex","userObj","useLogin","setLoading","setSaving","localStorage","getItem","fetch","res","json","error","padrones","indexes","j","ranges","index","console","log","join","valueRanges","data","setItem","carreras","maps","JSON","parse","formData","FormData","append","method","mode","addToAllLogins","newAllLogins","removeItem","stringify","bug","App","graphHook","Provider","ReactDOM","theme","getElementById"],"mappings":"qaAEaA,EAAS,CAEpBC,SAAU,UACVC,QAAS,UACTC,aAAc,UACdC,YAAa,UACbC,KAAM,QACNC,SAAU,QAGVC,UAAW,CACTC,GAAI,UACJC,IAAK,UACLC,IAAK,WAEPC,UAAW,CACTC,IAAK,UACLH,IAAK,UACLC,IAAK,UACLG,IAAK,WAEPC,YAAa,CACXN,GAAI,UACJC,IAAK,UACLC,IAAK,WAEPK,aAAc,CACZP,GAAI,UACJC,IAAK,UACLC,IAAK,WAEPM,aAAc,CACZR,GAAI,UACJC,IAAK,UACLC,IAAK,WAEPO,QAAS,CACPT,GAAI,UACJC,IAAK,UACLC,IAAK,WAGPQ,SAAU,CACRR,IAAK,WAEPS,OAAQ,CACNP,IAAK,UACLQ,IAAK,UACLC,IAAK,UACLZ,IAAK,UACLC,IAAK,UACLG,IAAK,UACLS,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAM,WAERC,aAAc,CACZlB,GAAI,UACJE,IAAK,WAEPiB,aAAc,CACZnB,GAAI,UACJE,IAAK,WAEPkB,aAAc,CACZpB,GAAI,UACJE,IAAK,WAEPmB,aAAc,CACZnB,IAAK,WAEPoB,aAAc,CACZpB,IAAK,WAEPqB,aAAc,CACZrB,IAAK,WAEPsB,aAAc,CACZtB,IAAK,WAEPuB,aAAc,CACZvB,IAAK,YAQIwB,EAAcC,YAAY,CACrCC,MAAO,CACLC,KAAM,wBACNC,QAAS,iBACTC,KAAM,oBAERC,OAAO,eACFxC,GAELyC,OAba,CACbC,iBAAkB,YCvDLC,EA/BS,CACtB,CACEC,GAAI,SACJC,KAAM,oFACNC,MCPkB,CACpB,CACEF,GAAI,MACJG,QAAS,qBACTC,SAAU,EACVC,UAAW,MACXC,MAAO,qBACPC,MAAO,EACPC,aAAc,IAEhB,CACER,GAAI,MACJG,QAAS,eACTC,SAAU,EACVI,aAAc,MACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,MACJG,QAAS,uBACTC,SAAU,EACVI,aAAc,MACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,MACJG,QAAS,yCACTC,SAAU,EACVI,aAAc,MACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,MACJG,QAAS,SACTC,SAAU,EACVI,aAAc,MACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,MACJG,QAAS,YACTC,SAAU,EACVI,aAAc,MACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,MACJG,QAAS,2DACTC,SAAU,EACVI,aAAc,MACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,MACJG,QAAS,iDACTC,SAAU,EACVI,aAAc,MACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,MACJG,QAAS,6BACTC,SAAU,EACVI,aAAc,MACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,MACJG,QAAS,uBACTC,SAAU,EACVI,aAAc,MACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,MACJG,QAAS,WACTC,SAAU,EACVI,aAAc,MACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,MACJG,QAAS,OACTC,SAAU,EACVI,aAAc,UACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,MACJG,QAAS,6BACTC,SAAU,EACVI,aAAc,MACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,MACJG,QAAS,UACTC,SAAU,EACVI,aAAc,MACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,MACJG,QAAS,aACTC,SAAU,EACVI,aAAc,MACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,MACJG,QAAS,gBACTC,SAAU,EACVI,aAAc,MACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,MACJG,QAAS,8BACTC,SAAU,EACVI,aAAc,MACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,MACJG,QAAS,sBACTC,SAAU,EACVI,aAAc,MACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,MACJG,QAAS,wBACTC,SAAU,EACVI,aAAc,MACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,QACJG,QAAS,mCACTC,SAAU,EACVI,aAAc,MACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,QACJG,QAAS,kCACTC,SAAU,EACVI,aAAc,cACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,QACJG,QAAS,2BACTC,SAAU,EACVI,aAAc,cACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,QACJG,QAAS,mCACTC,SAAU,EACVI,aAAc,QACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,QACJG,QAAS,uCACTC,SAAU,EACVI,aAAc,QACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,QACJG,QAAS,sBACTC,SAAU,EACVI,aAAc,QACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,QACJG,QAAS,mCACTC,SAAU,EACVI,aAAc,cACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,QACJG,QAAS,8BACTC,SAAU,EACVI,aAAc,cACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,QACJG,QAAS,8BACTC,SAAU,EACVI,aAAc,oBACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,QACJG,QAAS,gBACTC,SAAU,EACVI,aAAc,QACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,QACJG,QAAS,2BACTC,SAAU,EACVI,aAAc,QACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,QACJG,QAAS,+BACTC,SAAU,EACVI,aAAc,cACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,QACJG,QAAS,iCACTC,SAAU,EACVI,aAAc,cACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,QACJG,QAAS,8BACTC,SAAU,EACVI,aAAc,QACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,QACJG,QAAS,4BACTC,SAAU,EACVI,aAAc,oBACdH,UAAW,wBACXE,MAAO,GAET,CACEP,GAAI,QACJG,QAAS,yBACTC,SAAU,EACVI,aAAc,QACdH,UAAW,sBAEb,CACEL,GAAI,QACJG,QAAS,oCACTC,SAAU,EACVI,aAAc,MACdH,UAAW,sBAEb,CACEL,GAAI,QACJG,QAAS,gCACTC,SAAU,EACVI,aAAc,QACdH,UAAW,sBAEb,CACEL,GAAI,QACJG,QAAS,SACTC,SAAU,EA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","file":"static/js/main.f4e51c16.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\n\nexport const COLORS = {\n  // https://nipponcolors.com/\n  headerbg: \"#222d38\",\n  graphbg: \"#f7f9fa\",\n  headerbgdark: \"#333333\",\n  graphbgdark: \"#212121\",\n  text: \"black\",\n  textdark: \"white\",\n\n  // https://flatuicolors.com/palette/de + https://themera.vercel.app/\n  electivas: {\n    50: \"#DCC0F7\",\n    400: \"#C597F1\",\n    500: \"#AF6FEC\",\n  },\n  aprobadas: {\n    100: \"#99EFC4\",\n    400: \"#22DD7E\",\n    500: \"#22DD7E\",\n    600: \"#1BB165\",\n  },\n  habilitadas: {\n    50: \"#FED7B8\",\n    400: \"#FDA45E\",\n    500: \"#FC8A30\",\n  },\n  obligatorias: {\n    50: \"#BCE1FA\",\n    400: \"#66B9F4\",\n    500: \"#3CA6F1\",\n  },\n  findecarrera: {\n    50: \"#FEB9BD\",\n    400: \"#FC5F68\",\n    500: \"#FB323D\",\n  },\n  enfinal: {\n    50: \"#FFF0B8\",\n    400: \"#FEDC5D\",\n    500: \"#FDC802\",\n  },\n  // https://color.adobe.com/create/color-wheel starting from #FF9999\n  cursando: {\n    500: \"#eceef0\",\n  },\n  futuro: {\n    100: \"#d9dbdd\",\n    200: \"#cfd1d3\",\n    300: \"#c6c7c9\",\n    400: \"#bcbebf\",\n    500: \"#b3b4b5\",\n    600: \"#a9aaac\",\n    700: \"#9fa1a2\",\n    800: \"#969798\",\n    900: \"#8c8d8e\",\n    1000: \"#838485\",\n  },\n  orientacion1: {\n    50: \"#FFE5E5\",\n    500: \"#FF9999\",\n  },\n  orientacion2: {\n    50: \"#B8FFFD\",\n    500: \"#00cec9\",\n  },\n  orientacion3: {\n    50: \"#FFE5FF\",\n    500: \"#FF8AFF\",\n  },\n  orientacion4: {\n    500: \"#C9EEED\",\n  },\n  orientacion5: {\n    500: \"#E2A6B8\",\n  },\n  orientacion6: {\n    500: \"#DCFFC9\",\n  },\n  orientacion7: {\n    500: \"#f19066\",\n  },\n  orientacion8: {\n    500: \"#ccae62\",\n  },\n};\n\nconst config = {\n  initialColorMode: \"system\",\n};\n\nexport const customTheme = extendTheme({\n  fonts: {\n    body: \"system-ui, sans-serif\",\n    heading: \"Georgia, serif\",\n    mono: \"Menlo, monospace\",\n  },\n  colors: {\n    ...COLORS,\n  },\n  config,\n});\n","import * as data from \"./data\";\nimport { COLORS } from \"./theme\";\n\nexport const CARRERAS = [\n  {\n    id: \"ingles\",\n    link: \"https://www.fi.uba.ar/grado/carreras/lic-en-analisis-de-sistemas/plan-de-estudios\",\n    graph: data.ingles,\n    nombre: \"Profesorado de Inglés\",\n    nombrecorto: \"Inglés\",\n    creditos: {\n      total: 176,\n      obligatorias: 136,\n      electivas: 28,\n      checkbox: [\n        {\n          nombre: \"Prueba de nivel de idioma inglés\",\n          nombrecorto: \"Inglés\",\n          bg: COLORS.enfinal[50],\n          color: \"enfinal\",\n        },\n      ],\n      materias: [\n        {\n          id: \"95.61\",\n          nombrecorto: \"TPP\",\n          bg: COLORS.findecarrera[50],\n          color: \"findecarrera\",\n        },\n      ],\n    },\n  }\n];\n\nexport default CARRERAS;\n","export const ingles = [\r\n  {\r\n    id: \"CBC\",\r\n    materia: \"Examen suficiencia\",\r\n    creditos: 0,\r\n    categoria: \"CBC\",\r\n    title: \"Examen suficiencia\",\r\n    level: 0,\r\n    correlativas: \"\",\r\n  },\r\n  {\r\n    id: \"1.1\",\r\n    materia: \"Pedagogía\",\r\n    creditos: 8,\r\n    correlativas: \"CBC\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 1,\r\n  },\r\n  {\r\n    id: \"1.2\",\r\n    materia: \"Didáctica General\",\r\n    creditos: 8,\r\n    correlativas: \"CBC\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 1,\r\n  },\r\n  {\r\n    id: \"1.3\",\r\n    materia: \"Problemáticas Socio-Institucionales\",\r\n    creditos: 6,\r\n    correlativas: \"CBC\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 1,\r\n  },\r\n  {\r\n    id: \"1.4\",\r\n    materia: \"Oral I\",\r\n    creditos: 6,\r\n    correlativas: \"CBC\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 1,\r\n  },\r\n  {\r\n    id: \"1.5\",\r\n    materia: \"Escrita I\",\r\n    creditos: 6,\r\n    correlativas: \"CBC\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 1,\r\n  },\r\n  {\r\n    id: \"1.6\",\r\n    materia: \"Practicas Discursivas del Ambito Academico en Español\",\r\n    creditos: 6,\r\n    correlativas: \"CBC\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 1,\r\n  },\r\n  {\r\n    id: \"1.7\",\r\n    materia: \"Introducción al Ingles con fines academicos\",\r\n    creditos: 6,\r\n    correlativas: \"CBC\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 1,\r\n  },\r\n  {\r\n    id: \"1.8\",\r\n    materia: \"Estudios Interculturales I\",\r\n    creditos: 6,\r\n    correlativas: \"CBC\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 1,\r\n  },\r\n  {\r\n    id: \"1.9\",\r\n    materia: \"Practicas Docentes I\",\r\n    creditos: 6,\r\n    correlativas: \"CBC\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 1,\r\n  },\r\n  {\r\n    id: \"2.1\",\r\n    materia: \"Historia\",\r\n    creditos: 6,\r\n    correlativas: \"CBC\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 2,\r\n  },\r\n  {\r\n    id: \"2.2\",\r\n    materia: \"TICs\",\r\n    creditos: 8,\r\n    correlativas: \"1.1-1.2\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 2,\r\n  },\r\n  {\r\n    id: \"2.3\",\r\n    materia: \"Sujetos de la Educación\",\r\n    creditos: 8,\r\n    correlativas: \"CBC\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 2,\r\n  },\r\n  {\r\n    id: \"2.4\",\r\n    materia: \"Oral II\",\r\n    creditos: 8,\r\n    correlativas: \"1.4\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 2,\r\n  },\r\n  {\r\n    id: \"2.5\",\r\n    materia: \"Escrita II\",\r\n    creditos: 8,\r\n    correlativas: \"1.5\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 2,\r\n  },\r\n  {\r\n    id: \"2.6\",\r\n    materia: \"Fundamentos I\",\r\n    creditos: 8,\r\n    correlativas: \"CBC\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 2,\r\n  },\r\n  {\r\n    id: \"2.7\",\r\n    materia: \"Estudios Interculturales II\",\r\n    creditos: 8,\r\n    correlativas: \"1.8\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 2,\r\n  },\r\n  {\r\n    id: \"2.8\",\r\n    materia: \"Literatura Infantil\",\r\n    creditos: 8,\r\n    correlativas: \"1.8\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 2,\r\n  },\r\n  {\r\n    id: \"2.9\",\r\n    materia: \"Practicas Docentes II\",\r\n    creditos: 8,\r\n    correlativas: \"1.9\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 2,\r\n  },\r\n  {\r\n    id: \"71.12\",\r\n    materia: \"Estructura de las Organizaciones\",\r\n    creditos: 6,\r\n    correlativas: \"CBC\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 3,\r\n  },\r\n  {\r\n    id: \"61.09\",\r\n    materia: \"Probabilidad y Estadística B\",\r\n    creditos: 6,\r\n    correlativas: \"61.03-61.08\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 3,\r\n  },\r\n  {\r\n    id: \"75.06\",\r\n    materia: \"Organización de Datos\",\r\n    creditos: 6,\r\n    correlativas: \"75.03-75.41\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 3,\r\n  },\r\n  {\r\n    id: \"75.07\",\r\n    materia: \"Algoritmos y Programación III\",\r\n    creditos: 6,\r\n    correlativas: \"75.41\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 3,\r\n  },\r\n  {\r\n    id: \"71.13\",\r\n    materia: \"Información en las Organizaciones\",\r\n    creditos: 6,\r\n    correlativas: \"71.12\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 4,\r\n  },\r\n  {\r\n    id: \"75.08\",\r\n    materia: \"Sistemas Operativos\",\r\n    creditos: 6,\r\n    correlativas: \"75.06\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 4,\r\n  },\r\n  {\r\n    id: \"75.09\",\r\n    materia: \"Análisis de la Información\",\r\n    creditos: 6,\r\n    correlativas: \"75.06-75.07\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 4,\r\n  },\r\n  {\r\n    id: \"75.42\",\r\n    materia: \"Taller de Programación I\",\r\n    creditos: 4,\r\n    correlativas: \"75.03-75.41\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 4,\r\n  },\r\n  {\r\n    id: \"71.14\",\r\n    materia: \"Modelos y Optimización I\",\r\n    creditos: 6,\r\n    correlativas: \"61.03-61.07-61.08\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 5,\r\n  },\r\n  {\r\n    id: \"75.15\",\r\n    materia: \"Base de Datos\",\r\n    creditos: 6,\r\n    correlativas: \"75.09\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 5,\r\n  },\r\n  {\r\n    id: \"75.10\",\r\n    materia: \"Técnicas de Diseño\",\r\n    creditos: 6,\r\n    correlativas: \"75.09\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 5,\r\n  },\r\n  {\r\n    id: \"71.15\",\r\n    materia: \"Modelos y Optimización II\",\r\n    creditos: 6,\r\n    correlativas: \"61.09-71.14\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 6,\r\n  },\r\n  {\r\n    id: \"71.16\",\r\n    materia: \"Administración de Proyectos\",\r\n    creditos: 6,\r\n    correlativas: \"71.12-71.14\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 6,\r\n  },\r\n  {\r\n    id: \"75.17\",\r\n    materia: \"Implantación de Sistemas\",\r\n    creditos: 6,\r\n    correlativas: \"75.10\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 6,\r\n  },\r\n  {\r\n    id: \"75.18\",\r\n    materia: \"Proyectos Informáticos\",\r\n    creditos: 6,\r\n    correlativas: \"71.13-71.16-75.17\",\r\n    categoria: \"Materias Obligatorias\",\r\n    level: 6,\r\n  },\r\n  {\r\n    id: \"71.17\",\r\n    materia: \"Derecho Informático\",\r\n    creditos: 4,\r\n    correlativas: \"75.17\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"71.18\",\r\n    materia: \"Estructura Económica Argentina\",\r\n    creditos: 4,\r\n    correlativas: \"CBC\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"71.20\",\r\n    materia: \"Modelos y Optimización III\",\r\n    creditos: 6,\r\n    correlativas: \"71.15\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"78.xx\",\r\n    materia: \"Idioma\",\r\n    creditos: 4,\r\n    correlativas: \"CBC\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"71.58\",\r\n    materia: \"Análisis y Resolución de Problemas de Sistemas\",\r\n    creditos: 6,\r\n    correlativas: \"71.15\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"71.46\",\r\n    materia: \"Ingeniería Económica\",\r\n    creditos: 6,\r\n    correlativas: \"71.13\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"75.12\",\r\n    materia: \"Análisis Numérico I\",\r\n    creditos: 6,\r\n    correlativas: \"61.03-61.08-75.41\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"75.14\",\r\n    materia: \"Lenguajes Formales\",\r\n    creditos: 6,\r\n    correlativas: \"61.07\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"75.16\",\r\n    materia: \"Lenguajes de Programación\",\r\n    creditos: 6,\r\n    correlativas: \"75.14\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"75.19\",\r\n    materia: \"Teoría de Comunicación\",\r\n    creditos: 6,\r\n    correlativas: \"75.08\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"75.20\",\r\n    materia: \"Arquitecturas y Configuración\",\r\n    creditos: 6,\r\n    correlativas: \"75.08\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"75.22\",\r\n    materia: \"Concurrencia\",\r\n    creditos: 8,\r\n    correlativas: \"75.08\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"75.23\",\r\n    materia: \"Inteligencia Artificial\",\r\n    creditos: 6,\r\n    correlativas: \"75.41\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"75.24\",\r\n    materia: \"Teoría de la Programación IV\",\r\n    creditos: 6,\r\n    correlativas: \"75.07\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"75.26\",\r\n    materia: \"Simulación\",\r\n    creditos: 6,\r\n    correlativas: \"61.09\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"75.27\",\r\n    materia: \"Algoritmos y Programación IV\",\r\n    creditos: 6,\r\n    correlativas: \"75.07\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"75.29\",\r\n    materia: \"Teoría de Algoritmos I\",\r\n    creditos: 6,\r\n    correlativas: \"61.07-75.41\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"75.32\",\r\n    materia: \"Práctica Profesional\",\r\n    creditos: 3,\r\n    correlativas: \"71.13-75.10-75.15\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"75.33\",\r\n    materia: \"Redes y Teleprocesamientos I\",\r\n    creditos: 6,\r\n    correlativas: \"75.08-75.15\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"75.34\",\r\n    materia: \"Redes y Teleprocesamientos II\",\r\n    creditos: 6,\r\n    correlativas: \"75.33\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"75.36\",\r\n    materia: \"Seminario y Lógica de Bases de Datos\",\r\n    creditos: 3,\r\n    correlativas: \"75.15\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"75.38\",\r\n    materia: \"Análisis Numérico II A\",\r\n    creditos: 6,\r\n    correlativas: \"75.12\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"75.39\",\r\n    materia: \"Aplicaciones Informáticas\",\r\n    creditos: 6,\r\n    correlativas: \"75.08-75.09\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"75.50\",\r\n    materia: \"Introducción a los Sistemas Inteligentes\",\r\n    creditos: 6,\r\n    correlativas: \"61.09-71.14\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"75.71\",\r\n    materia: \"Seminario de Ingeniería de Informática I\",\r\n    creditos: 3,\r\n    correlativas: \"75.07\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n  {\r\n    id: \"75.72\",\r\n    materia: \"Seminario de Ingeniería de Informática II\",\r\n    creditos: 3,\r\n    correlativas: \"75.06-75.41\",\r\n    categoria: \"Materias Electivas\",\r\n  },\r\n];\r\n","import CARRERAS from \"./carreras\";\nimport { COLORS } from \"./theme\";\n\nexport const USER_FORM =\n  \"https://docs.google.com/forms/d/1ZRb0hJ4fZjlaV-NNtmBHVb5y92Hxzq--4jKQaQD62CQ/formResponse\";\n\nexport const USER_FORM_ENTRIES = {\n  padron: \"entry.315974123\",\n  carrera: \"entry.1215075080\",\n  orientacion: \"entry.2135693433\",\n  finDeCarrera: \"entry.1619476447\",\n};\n\nexport const GRAPH_FORM =\n  \"https://docs.google.com/forms/d/1Oq7oHVvGcx7Ikn5UYo5B53fqZnrjK0srJCDOT9xVTik/formResponse\";\n\nexport const GRAPH_FORM_ENTRIES = {\n  padron: \"entry.315974123\",\n  carrera: \"entry.1215075080\",\n  map: \"entry.2135693433\",\n};\n\nexport const BUGS_FORM =\n  \"https://docs.google.com/forms/d/1Mr4-4qWqZKaobjG3GI30aPvC5qlMsd6Eib3YGUbLd2k/formResponse\";\n\nexport const BUGS_FORM_ENTRIES = {\n  padron: \"entry.108884877\",\n  carrera: \"entry.30310619\",\n  orientacion: \"entry.2052513370\",\n  finDeCarrera: \"entry.1835776497\",\n  bug: \"entry.817568535\",\n};\n\nexport const SPREADSHEET =\n  \"https://sheets.googleapis.com/v4/spreadsheets/1Tq4vU1AEoA7_ekdMSkyXhYEbeUY5ESa0cAx4vs5bRKY/values\";\n\nexport const SHEETS = {\n  user: \"usuarios\",\n  registros: \"registros\",\n};\n\nexport const KEY = \"AIzaSyAh5pkFqQv0vpZI7qx5K9Mw2x6soFeTeC0\";\n\nexport const GRUPOS = {\n  Aprobadas: { color: COLORS.aprobadas[400] },\n  CBC: {\n    shape: \"hexagon\",\n    size: 30,\n  },\n  \"*CBC\": {\n    color: COLORS.aprobadas[100],\n    shape: \"square\",\n    size: 15,\n  },\n  Habilitadas: { color: COLORS.habilitadas[400] },\n  \"En Final\": { color: COLORS.enfinal[400] },\n  \"Materias Obligatorias\": { color: COLORS.obligatorias[400] },\n  \"Materias Electivas\": { color: COLORS.electivas[400] },\n  \"Fin de Carrera\": {\n    color: COLORS.findecarrera[400],\n    shape: \"diamond\",\n    size: 45,\n  },\n  \"Fin de Carrera (Obligatorio)\": {\n    color: COLORS.findecarrera[400],\n    shape: \"diamond\",\n    size: 45,\n  },\n  Cursando: { color: COLORS.cursando[500] },\n  \"A Cursar (1)\": { color: COLORS.futuro[100] },\n  \"A Cursar (2)\": { color: COLORS.futuro[200] },\n  \"A Cursar (3)\": { color: COLORS.futuro[300] },\n  \"A Cursar (4)\": { color: COLORS.futuro[400] },\n  \"A Cursar (5)\": { color: COLORS.futuro[500] },\n  \"A Cursar (6)\": { color: COLORS.futuro[600] },\n  \"A Cursar (7)\": { color: COLORS.futuro[700] },\n  \"A Cursar (8)\": { color: COLORS.futuro[800] },\n  \"A Cursar (9)\": { color: COLORS.futuro[900] },\n  \"A Cursar (10)\": { color: COLORS.futuro[1000] },\n  ...CARRERAS.filter((c) => c.orientaciones)\n    .flatMap((c) => c.orientaciones)\n    .reduce(function (map, obj) {\n      obj.color = COLORS[obj.colorScheme][500];\n      map[obj.nombre] = obj;\n      return map;\n    }, {}),\n};\n\nexport const GRAPHOPTIONS = {\n  nodes: { shape: \"box\" },\n  interaction: {\n    hover: true,\n  },\n  physics: {\n    // Las fisicas del grafo estan desactivadas porque no son compatibles con el atributo .hidden de los nodos individuales\n    // Al hacer un batch update de nodos donde cambia el atributo hidden, se rearma todo el grafo, haciendo que ande todo mal\n    // La solucion a esto sería no manejar el .hidden a nivel individual, pero a nivel grupo\n    // Entonces, se puede tener un grupo nuevo 'HiddenGroup' que tenga hidden en true, y poner que todos los otros grupos tengan hidden en false\n    // Asi, el boton de prender y apagar nodos tiene que manejar el grupo, y no directamente el atributo hidden\n    // Se puede tener un nuevo atributo custom (nodo._hidden), y que ese atributo sea el que al cambiar haga que el nodo cambie de grupo (en el actualizar() de Node.js)\n    // enabled: true\n    enabled: false,\n    hierarchicalRepulsion: {\n      nodeDistance: 90,\n    },\n    stabilization: {\n      iterations: 30,\n      fit: true,\n    },\n  },\n  layout: {\n    hierarchical: {\n      enabled: true,\n      levelSeparation: 145,\n      treeSpacing: 0,\n      edgeMinimization: false,\n      direction: \"LR\",\n    },\n  },\n  edges: {\n    arrowStrikethrough: false,\n    arrows: {\n      to: { enabled: true, scaleFactor: 0.7, type: \"arrow\" },\n    },\n    color: { inherit: \"from\" },\n  },\n  groups: { ...GRUPOS },\n};\n","import React from \"react\";\n\nexport const UserContext = React.createContext();\nexport const GraphContext = React.createContext();\n","import { AddIcon, MinusIcon } from \"@chakra-ui/icons\";\nimport {\n  HStack,\n  LightMode,\n  SimpleGrid,\n  Tag,\n  TagLabel,\n  TagLeftIcon,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport * as C from \"../constants\";\nimport { GraphContext } from \"../Contexts\";\n\nconst CategoryTagStack = (props) => {\n  const {\n    toggleGroup,\n    isGroupHidden,\n    toggleElectivas,\n    electivasStatus,\n    nodes,\n  } = React.useContext(GraphContext);\n  const [key, setKey] = React.useState(false);\n  const categorias = nodes\n    ? nodes\n        .distinct(\"categoria\")\n        .filter(\n          (c) =>\n            c !== \"CBC\" &&\n            c !== \"*CBC\" &&\n            c !== \"Materias Obligatorias\" &&\n            c !== \"Fin de Carrera (Obligatorio)\" &&\n            c !== \"Fin de Carrera\" &&\n            c !== \"Materias Electivas\"\n        )\n    : [];\n\n  return (\n    <LightMode>\n      <SimpleGrid\n        columns={categorias.length + 1 > 4 ? 2 : 1}\n        mb={3}\n        ml={2}\n        spacing={2}\n        bottom={0}\n        position=\"absolute\"\n        key={key}\n      >\n        {nodes && (\n          <Tag\n            cursor=\"pointer\"\n            bg={C.GRUPOS[\"Materias Electivas\"]?.color}\n            onClick={() => {\n              setKey(!key);\n              toggleElectivas();\n            }}\n          >\n            <TagLeftIcon\n              as={() => {\n                switch (electivasStatus()) {\n                  case \"hidden\":\n                    return <AddIcon mr=\"0.5rem\" />;\n                  case \"partial\":\n                    return (\n                      <HStack spacing={0} mr=\"0.5rem\">\n                        <AddIcon />\n                        <AddIcon />\n                      </HStack>\n                    );\n\n                  case \"shown\":\n                    return <MinusIcon mr=\"0.5rem\" />;\n                  default:\n                    return;\n                }\n              }}\n            />\n            <TagLabel>Materias Electivas</TagLabel>\n          </Tag>\n        )}\n        {nodes &&\n          categorias.map((c) => (\n            <Tag\n              cursor=\"pointer\"\n              bg={C.GRUPOS[c]?.color}\n              onClick={() => {\n                setKey(!key);\n                toggleGroup(c);\n              }}\n            >\n              <TagLeftIcon as={isGroupHidden(c) ? AddIcon : MinusIcon} />\n              <TagLabel>{c}</TagLabel>\n            </Tag>\n          ))}\n      </SimpleGrid>\n    </LightMode>\n  );\n};\n\nexport default CategoryTagStack;\n","import {\n  Center,\n  Modal,\n  ModalOverlay,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\n\nconst injectStyle = (style) => {\n  const styleElement = document.createElement(\"style\");\n  let styleSheet = null;\n\n  document.head.appendChild(styleElement);\n\n  styleSheet = styleElement.sheet;\n\n  styleSheet.insertRule(style, styleSheet.cssRules.length);\n};\n\nconst LoadingGraph = (props) => {\n  const keyframesStyle = `\n      @keyframes sk-rotateplane {\n        0% {\n          transform: perspective(120px) rotateX(0deg) rotateY(0deg);\n          -webkit-transform: perspective(120px) rotateX(0deg) rotateY(0deg)\n        } 50% {\n          transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg);\n          -webkit-transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg)\n        } 100% {\n          transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg);\n          -webkit-transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg);\n        }\n      }\n    `;\n\n  injectStyle(keyframesStyle);\n  return (\n    <Modal isOpen={true}>\n      <ModalOverlay />\n      <Center\n        style={{\n          position: \"fixed\",\n          top: \"20%\",\n          left: \"50%\",\n          animation: \"sk-rotateplane 1.2s infinite ease-in-out\",\n        }}\n        bg={useColorModeValue(\"headerbg\", \"white\")}\n        h=\"3em\"\n        w=\"3em\"\n      />\n    </Modal>\n  );\n};\n\nexport default LoadingGraph;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  ChatIcon,\n  CheckIcon,\n  ExternalLinkIcon,\n  Icon,\n  MoonIcon,\n  SunIcon,\n} from \"@chakra-ui/icons\";\nimport {\n  Alert,\n  AlertDescription,\n  AlertTitle,\n  Box,\n  CloseButton,\n  DarkMode,\n  Flex,\n  IconButton,\n  LightMode,\n  Link,\n  SlideFade,\n  Tag,\n  TagLabel,\n  TagRightIcon,\n  Text,\n  Textarea,\n  Tooltip,\n  useColorMode,\n  useColorModeValue,\n  useToast,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useRef } from \"react\";\nimport Graph from \"react-graph-vis\";\nimport useResizeObserver from \"use-resize-observer\";\nimport * as C from \"../constants\";\nimport { GraphContext, UserContext } from \"../Contexts\";\nimport CategoryTagStack from \"./CategoryTagStack\";\nimport LoadingGraph from \"./LoadingGraph\";\n\nconst Body = (props) => {\n  const {\n    graph,\n    aprobar,\n    setNetwork,\n    redraw,\n    setNodes,\n    setEdges,\n    desaprobar,\n    getNode,\n    edges,\n    loadingGraph,\n    network,\n    openCBC,\n  } = React.useContext(GraphContext);\n  const { user, logged, submitBug } = React.useContext(UserContext);\n  const { setDisplayedNode } = props;\n  const toast = useToast();\n  const bugToast = React.useRef();\n  const [showGracias, setShowGracias] = React.useState(false);\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  const ref = useRef(null);\n  const { width, height } = useResizeObserver({ ref });\n\n  useEffect(redraw, [width, height]);\n\n  const events = {\n    click: (e) => {\n      const id = e.nodes[0];\n      if (id === \"CBC\") {\n        openCBC();\n        return;\n      }\n      const node = getNode(id);\n      if (!node) {\n        if (logged) setDisplayedNode(\"\");\n        return;\n      }\n      if (logged) {\n        setDisplayedNode(id);\n        return;\n      }\n      if (!node.aprobada) {\n        aprobar(id, 4);\n      } else {\n        desaprobar(id);\n      }\n    },\n    doubleClick: (e) => {\n      const id = e.nodes[0];\n      if (!logged) return;\n      if (id === \"CBC\") return;\n      const node = getNode(id);\n      if (!node) return;\n      setDisplayedNode(id);\n      if (!node.aprobada) {\n        aprobar(id, 4);\n      } else {\n        desaprobar(id);\n      }\n    },\n    hold: (e) => {\n      const id = e.nodes[0];\n      if (!logged) return;\n      if (id === \"CBC\") return;\n      const node = getNode(id);\n      if (!node) return;\n      setDisplayedNode(id);\n      if (!(node.nota === -1)) {\n        aprobar(id, -1);\n      } else {\n        desaprobar(id);\n      }\n    },\n    hoverNode: (e) => {\n      const id = e.node;\n\n      // ### Este codigo triguerea un update en nodes, haciendo que se re-renderice el grafo como cuando se aprueba una materia. Si estuviese la fisica prendida, esto no pasaria\n      // const neighborNodes = network.getConnectedNodes(id);\n      // const allOtherNodes = nodes.get({\n      //   filter: function (node) {\n      //     return !neighborNodes.includes(node.id) && !(node.id === id);\n      //   },\n      // });\n      // nodes.update(\n      //   allOtherNodes.map((node) => {\n      //     node.opacity = 0.6;\n      //     return node;\n      //   })\n      // );\n\n      const neighborEdges = network.getConnectedEdges(id);\n      const allOtherEdges = edges.get({\n        filter: function (edge) {\n          return !neighborEdges.includes(edge.id);\n        },\n      });\n      edges.update(\n        allOtherEdges.map((edge) => {\n          edge.arrows = { to: { enabled: false } };\n          edge.dashes = true;\n          edge.color = { opacity: 0.6 };\n          return edge;\n        })\n      );\n    },\n    blurNode: (e) => {\n      const id = e.node;\n      // ### Este codigo triguerea un update en nodes, haciendo que se re-renderice el grafo como cuando se aprueba una materia. Si estuviese la fisica prendida, esto no pasaria\n      // const neighborNodes = network.getConnectedNodes(id);\n      // const allOtherNodes = nodes.get({\n      //   filter: function (node) {\n      //     return !neighborNodes.includes(node.id) && !(node.id === id);\n      //   },\n      // });\n      // nodes.update(\n      //   allOtherNodes.map((node) => {\n      //     node.opacity = undefined;\n      //     return node;\n      //   })\n      // );\n\n      const neighborEdges = network.getConnectedEdges(id);\n      const allOtherEdges = edges.get({\n        filter: function (edge) {\n          return !neighborEdges.includes(edge.id);\n        },\n      });\n      edges.update(\n        allOtherEdges.map((edge) => {\n          edge.arrows = { to: { enabled: true } };\n          edge.dashes = false;\n          edge.color = null;\n          return edge;\n        })\n      );\n    },\n  };\n\n  return (\n    <Box\n      ref={ref}\n      css={{ \"& *:focus\": { outline: \"none\" } }}\n      bg={useColorModeValue(\"graphbg\", \"graphbgdark\")}\n      flexGrow=\"1\"\n      height=\"1em\"\n      position=\"relative\"\n    >\n      <SlideFade in={loadingGraph} unmountOnExit>\n        <LoadingGraph />\n      </SlideFade>\n      <Graph\n        key={user.carrera?.id}\n        graph={graph}\n        getNetwork={(r) => {\n          setNetwork(r);\n        }}\n        getNodes={(r) => {\n          r.carrera = user.carrera?.id;\n          setNodes(r);\n        }}\n        getEdges={(r) => {\n          setEdges(r);\n        }}\n        options={C.GRAPHOPTIONS}\n        events={events}\n      />\n      <CategoryTagStack />\n      <Box\n        mb={3}\n        textAlign=\"right\"\n        mr={2}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n      >\n        <Tooltip\n          label={`${useColorModeValue(\"Dark\", \"Light\")} theme`}\n          placement=\"top\"\n        >\n          <Link\n            color={useColorModeValue(\"text\", \"textdark\")}\n            onClick={toggleColorMode}\n          >\n            {useColorModeValue(<MoonIcon />, <SunIcon />)}\n          </Link>\n        </Tooltip>\n        <Tooltip label=\"FIUBA-Plan\" placement=\"top\">\n          <Link\n            isExternal\n            color={useColorModeValue(\"text\", \"textdark\")}\n            href=\"https://fede.dm/FIUBA-Plan/\"\n          >\n            <Icon boxSize={5} ml={2} viewBox=\"0 0 448 512\">\n              <path\n                fill=\"currentColor\"\n                d=\"M0 464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V192H0v272zm64-192c0-8.8 7.2-16 16-16h96c8.8 0 16 7.2 16 16v96c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16v-96zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v48h448v-48c0-26.5-21.5-48-48-48z\"\n              />\n            </Icon>\n          </Link>\n        </Tooltip>\n        <Tooltip label=\"FdelMazo/FIUBA-Map\" placement=\"top\">\n          <Link\n            isExternal\n            color={useColorModeValue(\"text\", \"textdark\")}\n            href=\"https://github.com/fdelmazo/FIUBA-Map\"\n          >\n            <Icon boxSize={5} ml={2} viewBox=\"0 0 16 16\">\n              <path\n                fill=\"currentColor\"\n                d=\"M7.999,0.431c-4.285,0-7.76,3.474-7.76,7.761 c0,3.428,2.223,6.337,5.307,7.363c0.388,0.071,0.53-0.168,0.53-0.374c0-0.184-0.007-0.672-0.01-1.32 c-2.159,0.469-2.614-1.04-2.614-1.04c-0.353-0.896-0.862-1.135-0.862-1.135c-0.705-0.481,0.053-0.472,0.053-0.472 c0.779,0.055,1.189,0.8,1.189,0.8c0.692,1.186,1.816,0.843,2.258,0.645c0.071-0.502,0.271-0.843,0.493-1.037 C4.86,11.425,3.049,10.76,3.049,7.786c0-0.847,0.302-1.54,0.799-2.082C3.768,5.507,3.501,4.718,3.924,3.65 c0,0,0.652-0.209,2.134,0.796C6.677,4.273,7.34,4.187,8,4.184c0.659,0.003,1.323,0.089,1.943,0.261 c1.482-1.004,2.132-0.796,2.132-0.796c0.423,1.068,0.157,1.857,0.077,2.054c0.497,0.542,0.798,1.235,0.798,2.082 c0,2.981-1.814,3.637-3.543,3.829c0.279,0.24,0.527,0.713,0.527,1.437c0,1.037-0.01,1.874-0.01,2.129 c0,0.208,0.14,0.449,0.534,0.373c3.081-1.028,5.302-3.935,5.302-7.362C15.76,3.906,12.285,0.431,7.999,0.431z\"\n              />\n            </Icon>\n          </Link>\n        </Tooltip>\n        <Tooltip label=\"Invitame un Cafecito\" placement=\"top\">\n          <Link\n            isExternal\n            color={useColorModeValue(\"text\", \"textdark\")}\n            href=\"https://cafecito.app/fdelmazo\"\n          >\n            <Icon boxSize={5} ml={2} viewBox=\"0 0 512 512\">\n              <path\n                fill=\"currentColor\"\n                d=\"M127.1 146.5c1.3 7.7 8 13.5 16 13.5h16.5c9.8 0 17.6-8.5 16.3-18-3.8-28.2-16.4-54.2-36.6-74.7-14.4-14.7-23.6-33.3-26.4-53.5C111.8 5.9 105 0 96.8 0H80.4C70.6 0 63 8.5 64.1 18c3.9 31.9 18 61.3 40.6 84.4 12 12.2 19.7 27.5 22.4 44.1zm112 0c1.3 7.7 8 13.5 16 13.5h16.5c9.8 0 17.6-8.5 16.3-18-3.8-28.2-16.4-54.2-36.6-74.7-14.4-14.7-23.6-33.3-26.4-53.5C223.8 5.9 217 0 208.8 0h-16.4c-9.8 0-17.5 8.5-16.3 18 3.9 31.9 18 61.3 40.6 84.4 12 12.2 19.7 27.5 22.4 44.1zM400 192H32c-17.7 0-32 14.3-32 32v192c0 53 43 96 96 96h192c53 0 96-43 96-96h16c61.8 0 112-50.2 112-112s-50.2-112-112-112zm0 160h-16v-96h16c26.5 0 48 21.5 48 48s-21.5 48-48 48z\"\n              />\n            </Icon>\n          </Link>\n        </Tooltip>\n        <LightMode>\n          <Box>\n            <Tag\n              mt={2}\n              variant=\"subtle\"\n              cursor=\"pointer\"\n              bg=\"#e9eaeb\"\n              onClick={() => {\n                toast.close(bugToast.current);\n                return (bugToast.current = toast({\n                  render: (props) => (\n                    <Alert\n                      borderRadius={6}\n                      p={5}\n                      mb=\"4em\"\n                      borderColor={\n                        colorMode === \"dark\" ? \"electivas.400\" : \"electivas.500\"\n                      }\n                      borderWidth={2}\n                      bg={colorMode === \"dark\" ? \"gray.700\" : \"gray.50\"}\n                      color={colorMode === \"dark\" ? \"textdark\" : \"text\"}\n                    >\n                      <Box flex=\"1\">\n                        <AlertTitle>Hola!</AlertTitle>\n                        <AlertDescription px={5} display=\"block\">\n                          <Text>\n                            Si encontrás algo feo, incorrecto, lento, erroneo...\n                            me decís?\n                          </Text>\n                          <Text>\n                            Si ves algo que te gustó, o tenes alguna sugerencia,\n                            también!\n                          </Text>\n                          <Text>\n                            Si querés que te responda, escribí tu\n                            mail/telegram/algo.\n                          </Text>\n                          <form\n                            onSubmit={(t) => {\n                              t.preventDefault();\n                              submitBug(t.target.elements[\"bug\"].value);\n                              setShowGracias(true);\n                              toast.close(bugToast.current);\n                            }}\n                          >\n                            <Flex mt={3} alignItems=\"flex-end\">\n                              <Textarea\n                                resize=\"none\"\n                                borderColor={\n                                  colorMode === \"dark\" ? \"textdark\" : \"text\"\n                                }\n                                color={\n                                  colorMode === \"dark\" ? \"textdark\" : \"text\"\n                                }\n                                focusBorderColor={\n                                  colorMode === \"dark\"\n                                    ? \"electivas.400\"\n                                    : \"electivas.500\"\n                                }\n                                size=\"sm\"\n                                name=\"bug\"\n                              />\n                              <DarkMode>\n                                <IconButton\n                                  ml={3}\n                                  colorScheme=\"purple\"\n                                  size=\"sm\"\n                                  type=\"submit\"\n                                  icon={<ChatIcon />}\n                                />\n                              </DarkMode>\n                            </Flex>\n                          </form>\n                          <Text fontSize=\"sm\" mt={2}>\n                            ¿Usás Github? me ayudás mucho más levantando un\n                            issue{\" \"}\n                            <Link\n                              isExternal\n                              _hover={{\n                                color:\n                                  colorMode === \"dark\"\n                                    ? \"electivas.400\"\n                                    : \"electivas.500\",\n                              }}\n                              href=\"https://github.com/FdelMazo/FIUBA-Map/issues/new\"\n                            >\n                              directamente{\" \"}\n                              <ExternalLinkIcon\n                                color={\n                                  colorMode === \"dark\"\n                                    ? \"electivas.400\"\n                                    : \"electivas.500\"\n                                }\n                                mx=\"2px\"\n                              />\n                            </Link>\n                          </Text>\n                        </AlertDescription>\n                      </Box>\n                      <CloseButton\n                        color={\n                          colorMode === \"dark\"\n                            ? \"electivas.400\"\n                            : \"electivas.500\"\n                        }\n                        onClick={() => toast.close(props.id)}\n                        position=\"absolute\"\n                        right=\"8px\"\n                        top=\"8px\"\n                      />\n                    </Alert>\n                  ),\n                  status: \"info\",\n                  position: \"bottom\",\n                  duration: null,\n                  isClosable: true,\n                }));\n              }}\n            >\n              <TagLabel>{showGracias ? \"Gracias!\" : \"Sugerencias\"}</TagLabel>\n              <TagRightIcon as={showGracias ? CheckIcon : ChatIcon} />\n            </Tag>\n          </Box>\n        </LightMode>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Body;\n","import { useEffect, useState } from \"react\";\n\nexport default function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n\n    function handleResize() {\n      // Set window width/height to state\n\n      setWindowSize({\n        width: window.innerWidth,\n\n        height: window.innerHeight,\n      });\n    }\n\n    // Add event listener\n\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n\n    handleResize();\n\n    // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","import {\n  CheckIcon,\n  EditIcon,\n  PlusSquareIcon,\n  SmallCloseIcon,\n} from \"@chakra-ui/icons\";\nimport {\n  Badge,\n  Box,\n  Checkbox,\n  Collapse,\n  Divider,\n  Editable,\n  EditableInput,\n  EditablePreview,\n  Flex,\n  Grid,\n  GridItem,\n  Icon,\n  IconButton,\n  LightMode,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  PinInput,\n  PinInputField,\n  Popover,\n  PopoverArrow,\n  PopoverBody,\n  PopoverContent,\n  PopoverHeader,\n  PopoverTrigger,\n  Progress,\n  Stat,\n  StatLabel,\n  StatNumber,\n  Text,\n  Tooltip,\n  useColorModeValue,\n  useEditableControls,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { GraphContext, UserContext } from \"../Contexts\";\nimport useWindowSize from \"./useWindowSize\";\n\nconst Footer = () => {\n  const { logged, user } = React.useContext(UserContext);\n  const {\n    promedio,\n    creditos,\n    stats,\n    toggleCheckbox,\n    optativas,\n    addOptativa,\n    aplazos,\n    setAplazos,\n    promedioConAplazos,\n    promedioConCBC,\n    editOptativa,\n    removeOptativa,\n  } = React.useContext(GraphContext);\n  const size = useWindowSize();\n  const mobile = size.width < 750;\n\n  function EditableControls(props) {\n    const { isEditing, getSubmitButtonProps, getEditButtonProps } =\n      useEditableControls();\n\n    const { defaultValue, optativa } = props;\n    return (\n      <>\n        <NumberInput\n          mr={1}\n          borderRadius={5}\n          size=\"sm\"\n          maxW={isEditing ? 16 : 10}\n          defaultValue={defaultValue}\n          min={1}\n          onChange={(_, creditos) => {\n            editOptativa(optativa.id, optativa.nombre, creditos);\n          }}\n        >\n          <NumberInputField isReadOnly={!isEditing} />\n          {isEditing && (\n            <NumberInputStepper>\n              <NumberIncrementStepper />\n              <NumberDecrementStepper />\n            </NumberInputStepper>\n          )}\n        </NumberInput>\n\n        {isEditing ? (\n          <>\n            <IconButton\n              size=\"sm\"\n              icon={<CheckIcon />}\n              {...getSubmitButtonProps()}\n            />\n          </>\n        ) : (\n          <IconButton size=\"sm\" icon={<EditIcon />} {...getEditButtonProps()} />\n        )}\n\n        {isEditing && (\n          <SmallCloseIcon\n            cursor=\"pointer\"\n            color=\"gray.600\"\n            my=\"auto\"\n            ml=\"0\"\n            mr=\"-15px\"\n            _hover={{ color: \"black\" }}\n            onClick={() => {\n              removeOptativa(optativa.id);\n            }}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Collapse in={logged} key={user.carrera?.id} position=\"relative\">\n      <Flex\n        alignItems=\"center\"\n        bg={useColorModeValue(\"headerbg\", \"headerbgdark\")}\n      >\n        <Box>\n          <Tooltip\n            placement=\"top\"\n            label={\n              stats.materiasAprobadas === 1\n                ? stats.materiasAprobadas + \" materia aprobada\"\n                : stats.materiasAprobadas + \" materias aprobadas\"\n            }\n          >\n            <Stat p=\"0.4em\" color=\"white\" size=\"sm\">\n              <StatLabel>Créditos</StatLabel>\n              <StatNumber>\n                {stats.creditosTotales + \" de \" + user.carrera?.creditos.total}\n              </StatNumber>\n            </Stat>\n          </Tooltip>\n        </Box>\n        <Grid\n          flexGrow={1}\n          mx={5}\n          columns={creditos.length}\n          templateColumns=\"repeat(10, 1fr)\"\n        >\n          {creditos.map((c) => (\n            <GridItem colSpan={c.proportion}>\n              <Popover placement=\"top\" trigger=\"hover\">\n                <LightMode>\n                  <PopoverTrigger>\n                    <Box>\n                      <Flex mb={1} mx={1} height={5}>\n                        {c.creditos >= c.creditosNecesarios ? (\n                          <Icon\n                            alignSelf=\"center\"\n                            boxSize={5}\n                            viewBox=\"0 0 640 512\"\n                          >\n                            <path\n                              fill={c.bg}\n                              d=\"M622.34 153.2L343.4 67.5c-15.2-4.67-31.6-4.67-46.79 0L17.66 153.2c-23.54 7.23-23.54 38.36 0 45.59l48.63 14.94c-10.67 13.19-17.23 29.28-17.88 46.9C38.78 266.15 32 276.11 32 288c0 10.78 5.68 19.85 13.86 25.65L20.33 428.53C18.11 438.52 25.71 448 35.94 448h56.11c10.24 0 17.84-9.48 15.62-19.47L82.14 313.65C90.32 307.85 96 298.78 96 288c0-11.57-6.47-21.25-15.66-26.87.76-15.02 8.44-28.3 20.69-36.72L296.6 284.5c9.06 2.78 26.44 6.25 46.79 0l278.95-85.7c23.55-7.24 23.55-38.36 0-45.6zM352.79 315.09c-28.53 8.76-52.84 3.92-65.59 0l-145.02-44.55L128 384c0 35.35 85.96 64 192 64s192-28.65 192-64l-14.18-113.47-145.03 44.56z\"\n                            />\n                          </Icon>\n                        ) : (\n                          <Badge\n                            alignSelf={\n                              c.creditosNecesarios &&\n                              c.creditos !== 0 &&\n                              \"baseline\"\n                            }\n                            colorScheme={c.color}\n                            variant=\"solid\"\n                          >\n                            {c.creditosNecesarios &&\n                              c.creditos !== 0 &&\n                              (Math.round(\n                                (c.creditos / c.creditosNecesarios) * 100\n                              ) || 0) + \"%\"}\n                          </Badge>\n                        )}\n                        {!mobile && (\n                          <Badge\n                            fontSize=\"x-small\"\n                            ml={1}\n                            colorScheme={\"whiteAlpha\"}\n                            variant=\"solid\"\n                            alignSelf=\"center\"\n                          >\n                            {c.nombrecorto}\n                          </Badge>\n                        )}\n                      </Flex>\n                      <Progress\n                        hasStripe\n                        height={4}\n                        css={{\n                          backgroundColor: c.bg,\n                        }}\n                        max={c.creditosNecesarios}\n                        value={c.creditos}\n                        colorScheme={c.color}\n                      />\n                    </Box>\n                  </PopoverTrigger>\n                </LightMode>\n                <PopoverContent>\n                  <PopoverArrow />\n                  <PopoverHeader border=\"none\">\n                    <strong>{c.nombre}</strong>\n                  </PopoverHeader>\n                  <PopoverBody>\n                    {c.checkbox ? (\n                      <LightMode>\n                        <Checkbox\n                          isIndeterminate={!!!c.check}\n                          isChecked={!!c.check}\n                          colorScheme={c.color}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            toggleCheckbox(c.nombre);\n                          }}\n                        >\n                          Marcar como completo\n                        </Checkbox>\n                      </LightMode>\n                    ) : c.creditosNecesarios ? (\n                      `${c.creditos} de ${c.creditosNecesarios} créditos necesarios`\n                    ) : (\n                      `Tenés ${c.creditos} créditos.\n                      Elegí ${\n                        user.carrera.eligeOrientaciones === true &&\n                        !user.orientacion\n                          ? \"orientación\"\n                          : \"\"\n                      }${\n                        user.carrera.eligeOrientaciones === true &&\n                        !user.orientacion &&\n                        !user.finDeCarrera\n                          ? \" y \"\n                          : \"\"\n                      }${\n                        !user.finDeCarrera ? \"entre tesis y tpp\" : \"\"\n                      } para saber cuantos necesitás`\n                    )}\n                    {c.nombre.includes(\"Materias Electivas\") &&\n                      optativas.length > 0 && (\n                        <>\n                          <Divider mt={3} />\n                          {optativas.map((o) => (\n                            <Editable\n                              key={o.id}\n                              m={2}\n                              textAlign=\"left\"\n                              defaultValue={o.nombre}\n                              isPreviewFocusable={false}\n                              submitOnBlur={false}\n                              onSubmit={(nombre) =>\n                                editOptativa(o.id, nombre, o.creditos)\n                              }\n                            >\n                              <Flex>\n                                <EditablePreview width=\"70%\" pl={2} mr={2} />\n                                <EditableInput width=\"70%\" pl={2} mr={2} />\n                                <EditableControls\n                                  optativa={o}\n                                  defaultValue={o.creditos}\n                                />\n                              </Flex>\n                            </Editable>\n                          ))}\n                        </>\n                      )}\n                    {c.nombre.includes(\"Materias Electivas\") && (\n                      <Tooltip\n                        placement=\"bottom\"\n                        label=\"Agregar créditos por fuera del plan\"\n                      >\n                        <IconButton\n                          onClick={() => {\n                            addOptativa(\"Materia Optativa\", 4);\n                          }}\n                          size=\"sm\"\n                          float=\"right\"\n                          icon={<PlusSquareIcon boxSize={4} />}\n                        />\n                      </Tooltip>\n                    )}\n                  </PopoverBody>\n                </PopoverContent>\n              </Popover>\n            </GridItem>\n          ))}\n        </Grid>\n\n        <Popover placement=\"top\" trigger=\"hover\">\n          <LightMode>\n            <PopoverTrigger>\n              <Box>\n                <Stat p=\"0.4em\" color=\"white\" size=\"sm\" textAlign=\"right\">\n                  <StatLabel>Promedio</StatLabel>\n                  <StatNumber>{promedio}</StatNumber>\n                </Stat>\n              </Box>\n            </PopoverTrigger>\n          </LightMode>\n          <PopoverContent>\n            <PopoverArrow />\n            <PopoverBody>\n              <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Text fontSize=\"md\">\n                  <strong>\n                    Promedio con\n                    <PinInput\n                      type=\"number\"\n                      onChange={(v) => setAplazos(parseFloat(v || 0))}\n                      value={aplazos.toString()}\n                      size=\"md\"\n                      variant=\"flushed\"\n                    >\n                      <PinInputField borderColor=\"red.500\" />\n                    </PinInput>\n                    aplazos\n                  </strong>\n                </Text>\n                <Text fontSize=\"md\">{promedioConAplazos(aplazos)}</Text>\n              </Flex>\n              <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Text fontSize=\"md\">\n                  <strong>Promedio con CBC</strong>\n                </Text>\n                <Text fontSize=\"md\">{promedioConCBC()}</Text>\n              </Flex>\n            </PopoverBody>\n          </PopoverContent>\n        </Popover>\n      </Flex>\n    </Collapse>\n  );\n};\n\nexport default Footer;\n","import {\n  ArrowLeftIcon,\n  ArrowRightIcon,\n  CheckIcon,\n  CloseIcon,\n} from \"@chakra-ui/icons\";\nimport {\n  Button,\n  Collapse,\n  Flex,\n  HStack,\n  IconButton,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  Stat,\n  StatHelpText,\n  StatLabel,\n  Text,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { GraphContext } from \"../Contexts\";\n\nconst Header = (props) => {\n  const { displayedNode } = props;\n  const { getNode, aprobar, desaprobar, cursando } =\n    React.useContext(GraphContext);\n  const [moreOptionsOpen, setMoreOptionsOpen] = React.useState(\n    getNode(displayedNode)?.cuatri > -1\n  );\n\n  const formatCuatri = (cuatri) => {\n    if (cuatri === -1) return \"/\";\n    return `+` + cuatri;\n  };\n\n  return (\n    <Flex height=\"4em\" alignItems=\"center\" justifyContent=\"space-around\">\n      <Stat alignSelf=\"flex-end\" mx={3} color=\"white\">\n        <StatLabel>[{getNode(displayedNode)?.id}]</StatLabel>\n        <StatHelpText>\n          <Text width=\"30ch\" isTruncated>\n            {getNode(displayedNode)?.materia}\n          </Text>\n        </StatHelpText>\n      </Stat>\n\n      <Flex borderRadius={6} border=\"2px solid white\" p={1} alignItems=\"center\">\n        {getNode(displayedNode)?.nota > 0 ? (\n          <Tooltip closeOnClick hasArrow label=\"Aprobar con Nota\">\n            <NumberInput\n              css={{ margin: 0 }}\n              errorBorderColor=\"transparent\"\n              borderColor=\"transparent\"\n              inputMode=\"numeric\"\n              onChange={(_, nota) => {\n                aprobar(displayedNode, nota);\n              }}\n              value={getNode(displayedNode)?.nota}\n              min={4}\n              max={10}\n              maxW={16}\n            >\n              <NumberInputField\n                _hover={{\n                  borderColor: \"transparent\",\n                }}\n                _focus={{\n                  borderColor: \"transparent\",\n                }}\n                color=\"white\"\n                fontWeight=\"bold\"\n              />\n              <NumberInputStepper mr={1}>\n                <NumberIncrementStepper\n                  border=\"none\"\n                  fontSize=\"small\"\n                  color=\"green.500\"\n                />\n                <NumberDecrementStepper\n                  border=\"none\"\n                  fontSize=\"small\"\n                  color=\"red.500\"\n                />\n              </NumberInputStepper>\n            </NumberInput>\n          </Tooltip>\n        ) : (\n          <Tooltip closeOnClick hasArrow label=\"Aprobar\">\n            <Button\n              _hover={{\n                backgroundColor: \"transparent\",\n              }}\n              borderRadius=\"0\"\n              variant=\"link\"\n              fontSize=\"larger\"\n              color=\"green.500\"\n              onClick={() => aprobar(displayedNode, 4)}\n            >\n              <CheckIcon />\n            </Button>\n          </Tooltip>\n        )}\n\n        <Tooltip closeOnClick hasArrow label=\"Desaprobar\">\n          <Button\n            _hover={{\n              backgroundColor: \"transparent\",\n            }}\n            borderRadius=\"0\"\n            variant=\"link\"\n            borderLeft=\"2px solid white\"\n            borderRight=\"2px solid white\"\n            color=\"red.500\"\n            onClick={() => desaprobar(displayedNode)}\n          >\n            <CloseIcon />\n          </Button>\n        </Tooltip>\n\n        <Tooltip closeOnClick hasArrow label=\"Poner en Final\">\n          <Button\n            _hover={{\n              backgroundColor: \"transparent\",\n            }}\n            borderRadius=\"0\"\n            variant=\"link\"\n            fontSize=\"larger\"\n            color=\"yellow.300\"\n            onClick={() => aprobar(displayedNode, -1)}\n          >\n            <strong>F</strong>\n          </Button>\n        </Tooltip>\n      </Flex>\n\n      <Tooltip closeOnClick hasArrow label=\"Más Opciones\">\n        <IconButton\n          mx={4}\n          border=\"2px\"\n          onClick={() => setMoreOptionsOpen(!moreOptionsOpen)}\n          variant=\"outline\"\n          color=\"white\"\n          colorScheme=\"whiteAlpha\"\n          fontSize=\"20px\"\n          transform=\"rotate(90deg)\"\n          icon={moreOptionsOpen ? <ArrowRightIcon /> : <ArrowLeftIcon />}\n        />\n      </Tooltip>\n\n      <Collapse in={moreOptionsOpen} direction=\"left\">\n        <HStack spacing={4}>\n          <HStack borderRadius={6} ml={1} border=\"2px solid white\">\n            <Tooltip closeOnClick hasArrow label=\"Cursando Actualmente\">\n              <Button\n                _hover={{\n                  backgroundColor: \"transparent\",\n                }}\n                borderRadius=\"0\"\n                cursor=\"pointer\"\n                variant=\"link\"\n                borderRight=\"2px solid white\"\n                fontSize=\"larger\"\n                color=\"cursando.500\"\n                onClick={() => cursando(displayedNode, 0)}\n              >\n                <strong>C</strong>\n              </Button>\n            </Tooltip>\n\n            <Tooltip closeOnClick hasArrow label=\"A cursar en N cuatris\">\n              <NumberInput\n                css={{ margin: 0 }}\n                errorBorderColor=\"white.500\"\n                borderColor=\"transparent\"\n                onChange={(_, cuatri) => {\n                  cursando(displayedNode, cuatri);\n                }}\n                value={formatCuatri(getNode(displayedNode)?.cuatri)}\n                min={0}\n                max={10}\n              >\n                <NumberInputField\n                  _hover={{\n                    borderColor: \"transparent\",\n                  }}\n                  _focus={{\n                    borderColor: \"transparent\",\n                  }}\n                  p={0}\n                  w=\"6ch\"\n                  color=\"white\"\n                  fontWeight=\"bold\"\n                />\n                <NumberInputStepper>\n                  <NumberIncrementStepper\n                    border=\"none\"\n                    color=\"cursando.500\"\n                    fontSize=\"large\"\n                    children={<strong>+</strong>}\n                  />\n                  <NumberDecrementStepper\n                    border=\"none\"\n                    color=\"futuro.1000\"\n                    fontSize=\"large\"\n                    children={<strong>-</strong>}\n                  />\n                </NumberInputStepper>\n              </NumberInput>\n            </Tooltip>\n          </HStack>\n          <Tooltip closeOnClick hasArrow label=\"Aprobar por Equivalencia\">\n            <Button\n              p={2}\n              _hover={{\n                backgroundColor: \"transparent\",\n              }}\n              cursor=\"pointer\"\n              variant=\"link\"\n              border=\"2px solid white\"\n              fontSize=\"larger\"\n              color=\"aprobadas.400\"\n              onClick={() => aprobar(displayedNode, 0)}\n            >\n              <strong>E</strong>\n            </Button>\n          </Tooltip>\n        </HStack>\n      </Collapse>\n    </Flex>\n  );\n};\n\nexport default Header;\n","import { SettingsIcon } from \"@chakra-ui/icons\";\nimport {\n  Button,\n  LightMode,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuItemOption,\n  MenuList,\n  MenuOptionGroup,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { GraphContext, UserContext } from \"../Contexts\";\n\nconst UserMenu = (props) => {\n  const { logout, user } = React.useContext(UserContext);\n  const { setFirstTime, changeOrientacion, changeFinDeCarrera, getNode } =\n    React.useContext(GraphContext);\n\n  const OrientacionesMenuGroup = () => (\n    <MenuOptionGroup\n      onChange={(value) => {\n        setFirstTime(false);\n        changeOrientacion(value);\n      }}\n      value={user.orientacion?.nombre || \"none\"}\n      title=\"Orientación\"\n      type=\"radio\"\n    >\n      <MenuItemOption type=\"checkbox\" value={\"none\"}>\n        No me decidí\n      </MenuItemOption>\n\n      {user.carrera?.orientaciones &&\n        user.carrera?.orientaciones\n          .filter((o) => !o.nonEligible)\n          .map((o) => (\n            <MenuItemOption type=\"checkbox\" value={o.nombre}>\n              {o.nombre}\n            </MenuItemOption>\n          ))}\n    </MenuOptionGroup>\n  );\n\n  return (\n    <Menu\n      defaultIsOpen={\n        ((user.carrera.eligeOrientaciones === true ||\n          user.carrera?.eligeOrientaciones?.[user.finDeCarrera?.id]) &&\n          !user.orientacion) ||\n        (user.carrera.finDeCarrera && !user.finDeCarrera)\n      }\n      closeOnSelect={false}\n    >\n      {!props.displayedNode && (\n        <>\n          <LightMode>\n            <MenuButton\n              w=\"20ch\"\n              textAlign=\"left\"\n              as={Button}\n              leftIcon={<SettingsIcon />}\n              size=\"sm\"\n              colorScheme=\"teal\"\n              alignSelf=\"flex-end\"\n            >\n              {user.padron}\n            </MenuButton>\n          </LightMode>\n          <MenuList>\n            {user.carrera.finDeCarrera && (\n              <MenuOptionGroup\n                onChange={(value) => {\n                  setFirstTime(false);\n                  changeFinDeCarrera(value);\n                }}\n                value={user.finDeCarrera?.id || \"none\"}\n                title=\"Fin de Carrera\"\n                type=\"radio\"\n              >\n                <MenuItemOption type=\"checkbox\" value={\"none\"}>\n                  No me decidí\n                </MenuItemOption>\n\n                {user.carrera?.finDeCarrera &&\n                  Object.values(user.carrera.finDeCarrera).map((v) => (\n                    <MenuItemOption type=\"checkbox\" value={v.id}>\n                      {getNode(v.materia)?.materia}\n                    </MenuItemOption>\n                  ))}\n              </MenuOptionGroup>\n            )}\n\n            {(user.carrera?.eligeOrientaciones === true ||\n              user.carrera?.eligeOrientaciones?.[user.finDeCarrera?.id]) && (\n              <OrientacionesMenuGroup />\n            )}\n\n            <MenuItem onClick={logout}>\n              <strong>Cerrar Sesión</strong>\n            </MenuItem>\n          </MenuList>\n        </>\n      )}\n    </Menu>\n  );\n};\n\nexport default UserMenu;\n","import { CheckCircleIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Button,\n  Flex,\n  Icon,\n  IconButton,\n  Input,\n  LightMode,\n  Popover,\n  PopoverArrow,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n  Switch,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { GraphContext, UserContext } from \"../Contexts\";\nimport UserMenu from \"./UserMenu\";\n\nconst PadronInput = (props) => {\n  const {\n    login,\n    logged,\n    user,\n    loading,\n    saving,\n    register,\n    padronInput,\n    setPadronInput,\n  } = React.useContext(UserContext);\n\n  const { autosave, setAutosave, saveGraph } = React.useContext(GraphContext);\n  const [notRegistered, setNotRegistered] = React.useState(false);\n  const [lastInput, setLastInput] = React.useState(\"\");\n\n  const showRegisterButton = notRegistered && padronInput === lastInput;\n\n  return (\n    <Box>\n      <form\n        onSubmit={async (t) => {\n          t.preventDefault();\n          const padron = t.target.elements[\"padron\"].value;\n          if (showRegisterButton) {\n            setLastInput(\"\");\n            register(padron);\n            return;\n          }\n\n          const couldLogin = await login(padron);\n          if (!couldLogin) setNotRegistered(true);\n          setLastInput(padron);\n        }}\n      >\n        <Flex align=\"center\">\n          {logged ? (\n            <>\n              <UserMenu displayedNode={props.displayedNode} />\n              {!props.displayedNode && (\n                <LightMode>\n                  <Popover placement=\"right-end\" trigger=\"hover\">\n                    <PopoverTrigger>\n                      <IconButton\n                        colorScheme=\"teal\"\n                        size=\"sm\"\n                        isLoading={saving}\n                        mx={2}\n                        onClick={() => {\n                          saveGraph();\n                        }}\n                      >\n                        <Icon boxSize={5} viewBox=\"0 0 448 512\">\n                          <path\n                            fill=\"white\"\n                            d=\"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z\"\n                          />\n                        </Icon>\n                      </IconButton>\n                    </PopoverTrigger>\n                    <PopoverContent color=\"black\" size=\"sm\" w=\"fit-content\">\n                      <PopoverArrow />\n                      <PopoverBody\n                        onClick={(e) => {\n                          e.preventDefault();\n                          setAutosave(!autosave);\n                        }}\n                      >\n                        auto-save\n                        <Switch\n                          isChecked={autosave}\n                          colorScheme=\"teal\"\n                          ml={2}\n                        />\n                      </PopoverBody>\n                    </PopoverContent>\n                  </Popover>\n                </LightMode>\n              )}\n            </>\n          ) : (\n            <LightMode>\n              <Input\n                css={{\n                  \"&::placeholder\": {\n                    color: \"LightGray\",\n                  },\n                }}\n                borderRadius={4}\n                size=\"sm\"\n                w=\"20ch\"\n                borderColor=\"white\"\n                color=\"white\"\n                name=\"padron\"\n                placeholder=\"Padrón\"\n                value={user.padron || padronInput}\n                onChange={(e) => setPadronInput(e.target.value)}\n                isDisabled={loading}\n              />\n\n              <Button\n                colorScheme={showRegisterButton ? \"red\" : \"whiteAlpha\"}\n                color=\"white\"\n                variant={showRegisterButton ? \"solid\" : \"outline\"}\n                size=\"sm\"\n                title={!showRegisterButton && \"Ingresar\"}\n                px={showRegisterButton && 7}\n                mx={2}\n                isLoading={loading}\n                isDisabled={padronInput === \"\"}\n                type=\"submit\"\n              >\n                {showRegisterButton ? \"Registrarse\" : <CheckCircleIcon />}\n              </Button>\n            </LightMode>\n          )}\n        </Flex>\n      </form>\n    </Box>\n  );\n};\n\nexport default PadronInput;\n","import { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport {\n  Flex,\n  Icon,\n  Link,\n  Menu,\n  MenuButton,\n  MenuItemOption,\n  MenuList,\n  MenuOptionGroup,\n  ScaleFade,\n  Tooltip,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport CARRERAS from \"../carreras\";\nimport { GraphContext, UserContext } from \"../Contexts\";\nimport MateriaMenu from \"./MateriaMenu\";\nimport PadronInput from \"./PadronInput\";\nimport useWindowSize from \"./useWindowSize\";\n\nconst Header = (props) => {\n  const { displayedNode } = props;\n  const { changeCarrera, setFirstTime } = React.useContext(GraphContext);\n  const { user } = React.useContext(UserContext);\n  const size = useWindowSize();\n  const mobile = size.width < 750;\n  return (\n    <Flex\n      height=\"4em\"\n      zIndex={11}\n      align=\"center\"\n      justify=\"space-between\"\n      bg={useColorModeValue(\"headerbg\", \"headerbgdark\")}\n      padding=\"0.8em\"\n    >\n      {displayedNode && <MateriaMenu displayedNode={displayedNode} />}\n      <ScaleFade in={!displayedNode}>\n        <PadronInput displayedNode={displayedNode} />\n      </ScaleFade>\n\n      <ScaleFade in={!displayedNode} unmountOnExit>\n        <Menu placement=\"bottom-end\" isLazy>\n          <MenuButton\n            _hover={{ borderColor: \"gray.400\" }}\n            _expanded={{ borderColor: \"blue.400\" }}\n            _focus={{ borderColor: \"blue.400\" }}\n            px={4}\n            py={2}\n            color=\"white\"\n            borderColor=\"white\"\n            borderRadius=\"md\"\n            borderWidth=\"1px\"\n          >\n            {mobile ? user.carrera?.nombrecorto : user.carrera?.nombre}\n            <ChevronDownIcon ml={2} />\n          </MenuButton>\n\n          <MenuList>\n            <MenuOptionGroup\n              onChange={(v) => {\n                setFirstTime(false);\n                changeCarrera(v);\n              }}\n              key={user.carrera?.id}\n              defaultValue={user.carrera?.id}\n              type=\"radio\"\n            >\n              {CARRERAS.map((c) => (\n                <MenuItemOption value={c.id}>{c.nombre}</MenuItemOption>\n              ))}\n            </MenuOptionGroup>\n          </MenuList>\n        </Menu>\n        {!mobile && (\n          <Tooltip label=\"Plan de Estudios\" placement=\"bottom\">\n            <Link color=\"white\" href={user.carrera?.link} isExternal>\n              <Icon boxSize={6} ml={2} viewBox=\"0 0 512 512\">\n                <path\n                  fill=\"currentColor\"\n                  d=\"M496 128v16a8 8 0 0 1-8 8h-24v12c0 6.627-5.373 12-12 12H60c-6.627 0-12-5.373-12-12v-12H24a8 8 0 0 1-8-8v-16a8 8 0 0 1 4.941-7.392l232-88a7.996 7.996 0 0 1 6.118 0l232 88A8 8 0 0 1 496 128zm-24 304H40c-13.255 0-24 10.745-24 24v16a8 8 0 0 0 8 8h464a8 8 0 0 0 8-8v-16c0-13.255-10.745-24-24-24zM96 192v192H60c-6.627 0-12 5.373-12 12v20h416v-20c0-6.627-5.373-12-12-12h-36V192h-64v192h-64V192h-64v192h-64V192H96z\"\n                />\n              </Icon>\n            </Link>\n          </Tooltip>\n        )}\n      </ScaleFade>\n    </Flex>\n  );\n};\n\nexport default Header;\n","import { Flex } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport Body from \"./Body\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\n\nconst MainApp = () => {\n  const [displayedNode, setDisplayedNode] = React.useState(\"\");\n\n  return (\n    <Flex direction=\"column\" h=\"100vh\">\n      <Header displayedNode={displayedNode} />\n      <Body setDisplayedNode={setDisplayedNode} />\n      <Footer />\n    </Flex>\n  );\n};\n\nexport default MainApp;\n","import { COLORS } from \"./theme\";\n\nfunction breakWords(string) {\n  let broken = \"\";\n  string.split(\" \").forEach((element) => {\n    if (element.length < 5) broken += \" \" + element;\n    else broken += \"\\n\" + element;\n  });\n  return broken.trim();\n}\n\nclass Node {\n  constructor(n) {\n    this.nodeRef = this;\n    Object.assign(this, { ...n });\n    this.label = breakWords(n.materia);\n    this.group = this.categoria;\n    this.aprobada = false;\n    this.nota = -2;\n    this.title =\n      this.title ||\n      (this.creditos\n        ? `[${this.id}] ${this.materia}\\n- Otorga ${this.creditos} créditos${\n            this.requiere ? \"\\n- Requiere \" + this.requiere + \" créditos\" : \"\"\n          }`\n        : `[${this.id}] ${this.materia}`);\n    this.cuatri = -1;\n    this.level = this.level ?? -1;\n    this.hidden =\n      this.categoria !== \"Materias Obligatorias\" &&\n      this.categoria !== \"CBC\" &&\n      this.categoria !== \"Fin de Carrera (Obligatorio)\";\n  }\n\n  aprobar(nota) {\n    if (nota < -1) return;\n    this.aprobada = nota > -1 ? true : false;\n    this.cuatri = -1;\n    this.nota = nota;\n    return this;\n  }\n\n  desaprobar() {\n    this.aprobada = false;\n    this.cuatri = -1;\n    this.nota = -2;\n    return this;\n  }\n\n  cursando(cuatri) {\n    this.aprobada = false;\n    this.cuatri = cuatri;\n    this.nota = -2;\n    return this;\n  }\n\n  isHabilitada(ctx) {\n    const { network, nodes, getNode } = ctx;\n\n    const from = network.getConnectedNodes(this.id, \"from\");\n    const totalCreditos = nodes\n      .get({\n        filter: (n) => n.aprobada,\n        fields: [\"creditos\"],\n      })\n      .reduce((acc, n) => {\n        acc += n.creditos;\n        return acc;\n      }, 0);\n\n    let todoAprobado = true;\n    for (let i = 0; i < from.length; i++) {\n      const m = getNode(from[i]);\n      todoAprobado &= m.aprobada;\n    }\n    if (this.requiere) todoAprobado &= totalCreditos >= this.requiere;\n    return todoAprobado;\n  }\n\n  actualizar(ctx) {\n    const { user, showLabels, nodes, colorMode } = ctx;\n    let grupoDefault = this.categoria;\n    if (this.aprobada && this.nota >= 0) grupoDefault = \"Aprobadas\";\n    else if (this.nota === -1) grupoDefault = \"En Final\";\n    else if (this.cuatri === 0) grupoDefault = \"Cursando\";\n    else if (this.cuatri > 0) grupoDefault = `A Cursar (${this.cuatri})`;\n    else if (this.isHabilitada(ctx)) grupoDefault = \"Habilitadas\";\n    this.group = grupoDefault;\n\n    let labelDefault = breakWords(this.materia);\n    if (showLabels) {\n      if (this.aprobada && this.nota > 0)\n        labelDefault += \"\\n[\" + this.nota + \"]\";\n      else if (this.aprobada && this.nota === 0)\n        labelDefault += \"\\n[Equivalencia]\";\n      else if (this.nota === -1) labelDefault += \"\\n[En Final]\";\n      else if (this.cuatri === 0) labelDefault += \"\\n[Cursando]\";\n      else if (this.cuatri === 1) labelDefault += \"\\n[En 1 cuatri]\";\n      else if (this.cuatri > 1)\n        labelDefault += \"\\n[En \" + this.cuatri + \" cuatris]\";\n    }\n    this.label = labelDefault;\n\n    if (this.categoria === \"*CBC\") {\n      if (this.group === \"Habilitadas\") this.color = COLORS.aprobadas[100];\n      if (this.group === \"Aprobadas\") this.color = COLORS.aprobadas[400];\n      this.font = { color: colorMode === \"dark\" ? \"white\" : \"black\" };\n    }\n\n    if (this.categoria === \"CBC\") {\n      const materiasCBC = nodes.get({\n        filter: (n) => n.categoria === \"*CBC\" && n.aprobada && n.nota > 0,\n        fields: [\"nota\"],\n      });\n      const sumCBC = materiasCBC.reduce((acc, node) => {\n        acc += node.nota;\n        return acc;\n      }, 0);\n\n      const promedioCBC = sumCBC ? (sumCBC / materiasCBC.length).toFixed(2) : 0;\n\n      this.label = breakWords(\"Examen Suficiencia\");\n      if (showLabels && promedioCBC) this.label += \"\\n[\" + promedioCBC + \"]\";\n      if (materiasCBC.length === 6) this.color = COLORS.aprobadas[400];\n      else this.color = COLORS.aprobadas[100];\n\n      this.font = { color: colorMode === \"dark\" ? \"white\" : \"black\" };\n    }\n\n    if (this.categoria === \"Fin de Carrera\") {\n      this.hidden = !(this.id === user.finDeCarrera?.materia);\n    }\n\n    if (\n      this.categoria === \"Fin de Carrera\" ||\n      this.categoria === \"Fin de Carrera (Obligatorio)\"\n    ) {\n      const lastLevel = Math.max(\n        ...nodes\n          .get({\n            filter: (n) =>\n              !n.hidden &&\n              n.categoria !== \"Fin de Carrera\" &&\n              n.categoria !== \"Fin de Carrera (Obligatorio)\",\n            fields: [\"level\"],\n            type: { level: \"number\" },\n          })\n          .map((n) => n.level)\n      );\n      this.level = lastLevel + 1;\n      this.font = { color: colorMode === \"dark\" ? \"white\" : \"black\" };\n    }\n\n    return this;\n  }\n}\n\nexport default Node;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport React from \"react\";\nimport CARRERAS from \"./carreras\";\nimport Node from \"./Node\";\nimport { COLORS } from \"./theme\";\n\nconst graphObj = {\n  nodes: [],\n  edges: [],\n  groups: [],\n};\n\nconst useGraph = (loginHook) => {\n  const [network, setNetwork] = React.useState(null);\n  const [nodes, setNodes] = React.useState(null);\n  const [edges, setEdges] = React.useState(null);\n  const [graph, setGraph] = React.useState(graphObj);\n  const [promedio, setPromedio] = React.useState(0);\n  const [creditos, setCreditos] = React.useState([]);\n  const [aplazos, setAplazos] = React.useState(0);\n  const [stats, setStats] = React.useState({\n    materiasAprobadas: 0,\n    creditosTotales: 0,\n  });\n  const [shouldLoadGraph, setShouldLoadGraph] = React.useState(false);\n  const [autosave, setAutosave] = React.useState(false);\n  const [loadingGraph, setLoadingGraph] = React.useState(false);\n  const [firstTime, setFirstTime] = React.useState(true);\n  const { user, setUser, register, logged, getGraph, postGraph } = loginHook;\n  const { colorMode } = useColorMode();\n  const [optativas, setOptativas] = React.useState([]);\n\n  const actualizar = () => {\n    if (!nodes) return;\n    if (autosave) saveGraph();\n    setPromedio(getPromedio());\n    setCreditos(getCreditos());\n    nodes.update(\n      nodes.map((n) =>\n        getNode(n.id).actualizar({\n          user,\n          network,\n          getNode,\n          showLabels: logged,\n          nodes,\n          colorMode,\n        })\n      )\n    );\n  };\n\n  React.useEffect(() => {\n    if (!logged) changeCarrera(CARRERAS[0].id);\n  }, []);\n\n  React.useEffect(() => {\n    if (logged) changeCarrera(user.carrera.id);\n  }, [logged]);\n\n  React.useEffect(() => {\n    actualizar();\n  }, [colorMode, optativas]);\n\n  React.useEffect(() => {\n    if (logged && !firstTime) register();\n  }, [user.carrera, user.orientacion, user.finDeCarrera]);\n\n  React.useEffect(() => {\n    if (!nodes?.carrera || nodes.carrera !== user.carrera?.id) return;\n    if (shouldLoadGraph) {\n      setShouldLoadGraph(false);\n      setLoadingGraph(true);\n      getGraph(user.padron, user.carrera.id)\n        .then((metadata) => {\n          const toUpdate = [];\n          if (metadata.materias) {\n            metadata.materias.forEach((m) => {\n              if (m.nota >= -1) {\n                toUpdate.push(getNode(m.id).aprobar(m.nota));\n              } else if (m.cuatri >= 0) {\n                toUpdate.push(getNode(m.id).cursando(m.cuatri));\n              }\n            });\n          }\n          if (metadata.checkboxes)\n            metadata.checkboxes.forEach((c) => toggleCheckbox(c));\n          if (user.orientacion) toggleGroup(user.orientacion.nombre);\n          if (electivasStatus() === \"hidden\") toggleElectivas();\n          nodes.update(toUpdate.flat());\n          actualizar();\n          setLoadingGraph(false);\n          if (metadata.optativas) setOptativas(metadata.optativas);\n          network.fit();\n        })\n        .catch((e) => {\n          setLoadingGraph(false);\n          aprobar(\"CBC\", 0);\n          network.fit();\n        });\n    }\n  }, [shouldLoadGraph, nodes]);\n\n  React.useEffect(() => {\n    if (!nodes?.carrera || nodes.carrera !== user.carrera?.id) return;\n    if (user.orientacion) changeOrientacion(user.orientacion.nombre);\n    aprobar(\"CBC\", 0);\n    network.fit();\n  }, [nodes, user.finDeCarrera, user.orientacion]);\n\n  const getNode = (id) => {\n    return nodes?.get(id)?.nodeRef;\n  };\n\n  const redraw = () => {\n    if (network) network.redraw();\n  };\n  const saveGraph = () => {\n    postGraph(nodes, user.carrera.creditos.checkbox, optativas);\n  };\n\n  const changeCarrera = async (id) => {\n    setUser(({ ...rest }) => {\n      const carrera = CARRERAS.find((c) => c.id === id);\n\n      const userdata = logged\n        ? user.allLogins.find((l) => l.carreraid === id)\n        : false;\n      setShouldLoadGraph(!!userdata);\n      const orientacion =\n        carrera.orientaciones?.find(\n          (c) => c.nombre === userdata?.orientacionid\n        ) || null;\n      const finDeCarrera =\n        carrera.finDeCarrera?.find((c) => c.id === userdata?.findecarreraid) ||\n        null;\n\n      const graphNodes = [];\n      const graphEdges = [];\n      carrera.graph.forEach((n) => {\n        graphNodes.push(new Node(n));\n        if (n.correlativas)\n          n.correlativas.split(\"-\").forEach((c) => {\n            graphEdges.push({ from: c, to: n.id });\n          });\n        if (n.requiere)\n          graphEdges.push({ from: \"CBC\", to: n.id, color: \"transparent\" });\n      });\n      const groups = Array.from(new Set(carrera.graph.map((n) => n.categoria)));\n      setGraph({ nodes: graphNodes, edges: graphEdges, groups });\n      return { ...rest, carrera, orientacion, finDeCarrera };\n    });\n  };\n  const changeOrientacion = (id) => {\n    const orientacion = user.carrera.orientaciones.find((c) => c.nombre === id);\n    setUser({ ...user, orientacion });\n  };\n  const changeFinDeCarrera = (id) => {\n    const finDeCarrera =\n      user.carrera.finDeCarrera.find((c) => c.id === id) || null;\n    setUser({ ...user, finDeCarrera });\n  };\n\n  const electivasStatus = () => {\n    const status = [\n      ...new Set(\n        nodes\n          .get({\n            filter: (c) => c.categoria === \"Materias Electivas\",\n            fields: [\"hidden\"],\n          })\n          .map((n) => n.hidden)\n      ),\n    ];\n    if (status.length === 1) {\n      return status[0] ? \"hidden\" : \"shown\";\n    }\n    return \"partial\";\n  };\n\n  const toggleElectivas = () => {\n    const status = electivasStatus();\n    let group = null;\n    switch (status) {\n      case \"hidden\":\n        group = nodes\n          .get({\n            filter: (n) =>\n              n.categoria === \"Materias Electivas\" &&\n              n.group !== \"Materias Electivas\",\n            fields: [\"id\"],\n          })\n          .map((n) => {\n            const node = getNode(n.id);\n            node.hidden = false;\n            return node;\n          });\n        if (group.length) break;\n      // eslint-disable-next-line no-fallthrough\n      case \"partial\":\n        group = graph.nodes\n          .filter((n) => n.categoria === \"Materias Electivas\")\n          .map((n) => {\n            const node = getNode(n.id);\n            node.hidden = false;\n            return node;\n          });\n        break;\n\n      case \"shown\":\n        group = graph.nodes\n          .filter((n) => n.categoria === \"Materias Electivas\")\n          .map((n) => {\n            const node = getNode(n.id);\n            node.hidden = true;\n            return node;\n          });\n        break;\n      default:\n        break;\n    }\n    balanceShownElectivas(group);\n\n    nodes.update(group);\n    actualizar();\n    network.fit();\n  };\n\n  const toggleGroup = (id) => {\n    const categoria = graph.nodes.filter((n) => n.categoria === id);\n    const group = categoria.map((n) => {\n      const node = getNode(n.id);\n      node.hidden = !node.hidden;\n      return node;\n    });\n\n    nodes.update(group);\n    actualizar();\n    network.fit();\n  };\n\n  const aprobar = (id, nota) => {\n    nodes.update(getNode(id).aprobar(nota));\n    actualizar();\n  };\n\n  const desaprobar = (id) => {\n    nodes.update(getNode(id).desaprobar());\n    actualizar();\n  };\n\n  const cursando = (id, cuatri) => {\n    nodes.update(getNode(id).cursando(cuatri));\n    actualizar();\n  };\n\n  const isGroupHidden = (id) => {\n    return nodes.get({\n      filter: (c) => c.categoria === id,\n      fields: [\"hidden\"],\n    })[0].hidden;\n  };\n\n  const toggleCheckbox = (c) => {\n    const value = !!user.carrera.creditos.checkbox.find((ch) => ch.nombre === c)\n      .check;\n    user.carrera.creditos.checkbox.find((ch) => ch.nombre === c).check = !value;\n    actualizar();\n  };\n\n  const getPromedio = () => {\n    const materias = nodes.get({\n      filter: (n) => n.aprobada && n.nota > 0 && n.categoria !== \"*CBC\",\n      fields: [\"nota\"],\n    });\n    const sum = materias.reduce((acc, node) => {\n      acc += node.nota;\n      return acc;\n    }, 0);\n    return sum ? (sum / materias.length).toFixed(2) : 0;\n  };\n\n  const getCreditos = () => {\n    let creditos = [];\n    const accumulator = (acc, node) => {\n      acc += node.creditos;\n      return acc;\n    };\n\n    const getCorrectCreditos = () => {\n      if (user.carrera.eligeOrientaciones === true)\n        return user.carrera.creditos.orientacion[user.orientacion?.nombre];\n      return user.carrera.creditos;\n    };\n\n    creditos.push({\n      nombre: \"Materias Obligatorias\",\n      nombrecorto: \"Obligatorias\",\n      bg: COLORS.obligatorias[50],\n      color: \"obligatorias\",\n      creditosNecesarios: user.carrera.creditos.obligatorias,\n      creditos: nodes\n        .get({\n          filter: (n) =>\n            n.categoria === \"Materias Obligatorias\" &&\n            n.aprobada &&\n            n.nota >= 0,\n          fields: [\"creditos\"],\n        })\n        .reduce(accumulator, 0),\n    });\n\n    creditos.push({\n      nombre: `Materias Electivas${\n        user.finDeCarrera ? ` (eligiendo ${user.finDeCarrera.id})` : \"\"\n      }`,\n      nombrecorto: \"Electivas\",\n      color: \"electivas\",\n      bg: COLORS.electivas[50],\n      creditosNecesarios: isNaN(getCorrectCreditos()?.electivas)\n        ? getCorrectCreditos()?.electivas[user.finDeCarrera?.id]\n        : getCorrectCreditos()?.electivas,\n\n      creditos:\n        nodes\n          .get({\n            filter: (n) =>\n              n.categoria !== \"CBC\" &&\n              n.categoria !== \"*CBC\" &&\n              n.categoria !== \"Materias Obligatorias\" &&\n              n.categoria !== \"Fin de Carrera\" &&\n              n.categoria !== \"Fin de Carrera (Obligatorio)\" &&\n              n.categoria !== user.orientacion?.nombre &&\n              n.aprobada &&\n              n.nota >= 0,\n            fields: [\"creditos\"],\n          })\n          .reduce(accumulator, 0) + optativas.reduce(accumulator, 0),\n    });\n\n    if (\n      user.carrera.eligeOrientaciones &&\n      user.orientacion &&\n      (user.carrera.creditos.orientacion[user.orientacion?.nombre] ||\n        user.carrera.creditos.orientacion[user.finDeCarrera?.id])\n    )\n      creditos.push({\n        nombre: `Orientación: ${user.orientacion.nombre}`,\n        nombrecorto: \"Orientación\",\n        bg: COLORS[user.orientacion.colorScheme][50],\n        color: user.orientacion.colorScheme,\n        creditosNecesarios: isNaN(getCorrectCreditos()?.orientacion)\n          ? getCorrectCreditos().orientacion[user.finDeCarrera?.id]\n          : getCorrectCreditos()?.orientacion,\n        creditos: nodes\n          .get({\n            filter: (n) =>\n              n.categoria === user.orientacion.nombre &&\n              n.aprobada &&\n              n.nota >= 0,\n            fields: [\"creditos\"],\n          })\n          .reduce(accumulator, 0),\n      });\n\n    if (user.carrera.creditos.checkbox) {\n      user.carrera.creditos.checkbox.forEach((m) => {\n        creditos.push({\n          nombre: m.nombre,\n          nombrecorto: m.nombrecorto,\n          color: m.color,\n          bg: m.bg,\n          creditosNecesarios: 8,\n          creditos: m.check ? 8 : 0,\n          checkbox: true,\n          check: m.check,\n        });\n      });\n    }\n\n    if (user.carrera.creditos.materias)\n      user.carrera.creditos.materias.forEach((m) => {\n        const node = getNode(m.id);\n        if (node)\n          creditos.push({\n            nombre: node.materia,\n            nombrecorto: m.nombrecorto,\n            color: m.color,\n            bg: m.bg,\n            creditosNecesarios: node.creditos,\n            creditos: node.aprobada ? node.creditos : 0,\n          });\n      });\n\n    if (user.finDeCarrera) {\n      const node = getNode(user.finDeCarrera.materia);\n      if (node && node.creditos)\n        creditos.push({\n          nombre: node.materia,\n          nombrecorto: user.finDeCarrera.id,\n          color: \"findecarrera\",\n          bg: COLORS.findecarrera[50],\n          creditosNecesarios: node.creditos,\n          creditos: node.aprobada ? node.creditos : 0,\n        });\n    }\n\n    const totalNecesarios = creditos.reduce((acc, grupo) => {\n      acc += grupo.creditosNecesarios;\n      return acc;\n    }, 0);\n\n    creditos.forEach((c) => {\n      c.proportion =\n        Math.round((c.creditosNecesarios / totalNecesarios) * 10) || 1;\n    });\n\n    const fullProportion = creditos.reduce((acc, grupo) => {\n      acc += grupo.proportion;\n      return acc;\n    }, 0);\n\n    if (fullProportion > 10) creditos[0].proportion -= fullProportion - 10;\n    else if (fullProportion < 10) creditos[0].proportion += 10 - fullProportion;\n\n    const aprobadas = nodes.get({\n      filter: (n) =>\n        n.categoria !== \"CBC\" &&\n        n.categoria !== \"*CBC\" &&\n        n.aprobada &&\n        n.nota >= 0,\n      fields: [\"creditos\"],\n    });\n    aprobadas.push(...optativas.filter(Boolean));\n\n    setStats({\n      materiasAprobadas: aprobadas.length,\n      creditosTotales: aprobadas.reduce(accumulator, 0),\n    });\n\n    return creditos;\n  };\n\n  const addOptativa = (nombre, creditos) => {\n    const ids = optativas.map((o) => o.id);\n    let id = ids.length + 1;\n    for (let i = 0; i < ids.length; i++) {\n      if (ids[i] !== i + 1) id = i;\n    }\n    setOptativas(() => {\n      optativas.push({ id, nombre, creditos });\n      return optativas.filter(Boolean);\n    });\n  };\n\n  const editOptativa = (id, nombre, creditos) => {\n    setOptativas(() => {\n      const i = optativas.findIndex((o) => o.id === id);\n      optativas[i] = { id, nombre, creditos };\n      return optativas.filter(Boolean);\n    });\n  };\n  const removeOptativa = (id) => {\n    setOptativas(() => {\n      const i = optativas.findIndex((o) => o.id === id);\n      delete optativas[i];\n      return optativas.filter(Boolean);\n    });\n  };\n\n  const promedioConAplazos = (n) => {\n    if (!nodes) return 0;\n    const materias = nodes.get({\n      filter: (n) => n.aprobada && n.nota > 0 && n.categoria !== \"*CBC\",\n      fields: [\"nota\"],\n    });\n    materias.push(...Array(n).fill({ nota: 2 }));\n\n    const sum = materias.reduce((acc, node) => {\n      acc += node.nota;\n      return acc;\n    }, 0);\n    return sum ? (sum / materias.length).toFixed(2) : 0;\n  };\n\n  const promedioConCBC = () => {\n    if (!nodes) return 0;\n    const materias = nodes.get({\n      filter: (n) => n.aprobada && n.nota > 0,\n      fields: [\"nota\"],\n    });\n\n    const sum = materias.reduce((acc, node) => {\n      acc += node.nota;\n      return acc;\n    }, 0);\n    return sum ? (sum / materias.length).toFixed(2) : 0;\n  };\n\n  const openCBC = () => {\n    toggleGroup(\"*CBC\");\n  };\n\n  const balanceShownElectivas = (group) => {\n    const sortByGroup = (a, b) => {\n      const nodeA = getNode(a.id);\n      const nodeB = getNode(b.id);\n      const groupOrder = [\n        \"Aprobadas\",\n        \"En Final\",\n        \"Habilitadas\",\n        \"Materias Electivas\",\n        \"Cursando\",\n        ...Array(10)\n          .fill()\n          .map((_, i) => `A Cursar (${i + 1})`),\n      ];\n      return groupOrder.indexOf(nodeA.group) - groupOrder.indexOf(nodeB.group);\n    };\n\n    const electivas = group.sort(sortByGroup);\n    const lastLevel = Math.max(\n      ...nodes\n        .get({\n          filter: (n) =>\n            n.categoria !== \"Materias Electivas\" &&\n            n.categoria !== \"Fin de Carrera\" &&\n            n.categoria !== \"Fin de Carrera (Obligatorio)\",\n          fields: [\"level\"],\n          type: { level: \"number\" },\n        })\n        .map((n) => n.level)\n    );\n    let counter = 0;\n    let addLevel = 1;\n\n    electivas.forEach((n) => {\n      const node = getNode(n.id);\n      counter += 1;\n      if (counter === 7) {\n        counter = 0;\n        addLevel += 1;\n      }\n      node.level = lastLevel + addLevel;\n    });\n    nodes.update(electivas);\n  };\n\n  return {\n    graph,\n    toggleGroup,\n    getNode,\n    aprobar,\n    desaprobar,\n    redraw,\n    promedio,\n    promedioConAplazos,\n    promedioConCBC,\n    creditos,\n    stats,\n    network,\n    setNetwork,\n    nodes,\n    setNodes,\n    saveGraph,\n    edges,\n    autosave,\n    setAutosave,\n    setEdges,\n    changeCarrera,\n    changeOrientacion,\n    changeFinDeCarrera,\n    toggleCheckbox,\n    loadingGraph,\n    setFirstTime,\n    isGroupHidden,\n    actualizar,\n    cursando,\n    electivasStatus,\n    toggleElectivas,\n    optativas,\n    addOptativa,\n    editOptativa,\n    removeOptativa,\n    aplazos,\n    setAplazos,\n    openCBC,\n  };\n};\n\nexport default useGraph;\n","import React from \"react\";\nimport CARRERAS from \"./carreras\";\nimport * as C from \"./constants\";\n\nconst userObj = {\n  padron: \"\",\n  carrera: null,\n  orientacion: null,\n  finDeCarrera: null,\n  allLogins: [],\n};\n\nconst useLogin = () => {\n  const [user, setUser] = React.useState(userObj);\n  const [loading, setLoading] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n  const [padronInput, setPadronInput] = React.useState(\"\");\n  const logged = user.padron !== \"\";\n\n  React.useEffect(() => {\n    if (window.localStorage.getItem(\"padron\")) {\n      setPadronInput(window.localStorage.getItem(\"padron\"));\n      login(window.localStorage.getItem(\"padron\"));\n    }\n  }, []);\n\n  const login = async (padron) => {\n    setLoading(true);\n    if (!padron) {\n      setLoading(false);\n      return false;\n    }\n\n    const padrones = await fetch(\n      `${C.SPREADSHEET}/${C.SHEETS.user}!B:B?majorDimension=COLUMNS&key=${C.KEY}`\n    )\n      .then((res) => res.json())\n      .then((res) => (!res.error ? res.values[0] : null));\n\n    if (!padrones) {\n      setLoading(false);\n      return false;\n    }\n\n    const indexes = [];\n    let j = -1;\n    while ((j = padrones.indexOf(padron, j + 1)) !== -1) {\n      indexes.push(j);\n    }\n\n    if (!indexes.length) {\n      setLoading(false);\n      return false;\n    }\n\n    let ranges = indexes.map(\n      (index) => `&ranges=${C.SHEETS.user}!${index + 1}:${index + 1}`\n    );\n    console.log(\"Ranges:\");\n    console.log(ranges);\n    let data = await fetch(\n      `${C.SPREADSHEET}:batchGet?key=${C.KEY}${ranges.join(\"\")}`\n    ).then((res) => res.json().then((res) => res.valueRanges));\n    console.log(\"data:\");\n    console.log(data);\n    const allLogins = data.map((d) => ({\n      carreraid: d.values[0][2],\n      orientacionid: d.values[0][3],\n      findecarreraid: d.values[0][4],\n    }));\n\n    const { carreraid, orientacionid, findecarreraid } = allLogins[0];\n    const carrera = CARRERAS.find((c) => c.id === carreraid);\n\n    setUser({\n      padron,\n      carrera,\n      orientacion: carrera.orientaciones?.find(\n        (c) => c.nombre === orientacionid\n      ),\n      finDeCarrera: carrera.finDeCarrera?.find((c) => c.id === findecarreraid),\n      allLogins,\n    });\n    window.localStorage.setItem(\"padron\", padron);\n    setLoading(false);\n    return true;\n  };\n\n  const postGraph = (nodes, checkboxes, optativas) => {\n    setSaving(true);\n    const formData = new FormData();\n    const padron = user.padron;\n    const carreraid = user.carrera.id;\n    const map = {\n      materias: nodes.get({\n        filter: (n) => n.aprobada || n.nota === -1 || n.cuatri >= 0,\n        fields: [\"id\", \"nota\", \"cuatri\"],\n      }),\n    };\n    if (checkboxes)\n      map.checkboxes = checkboxes\n        .filter((c) => c.check === true)\n        .map((c) => c.nombre);\n    if (optativas) map.optativas = optativas;\n\n    formData.append(`${C.GRAPH_FORM_ENTRIES.padron}`, padron);\n    formData.append(`${C.GRAPH_FORM_ENTRIES.carrera}`, carreraid);\n    formData.append(`${C.GRAPH_FORM_ENTRIES.map}`, JSON.stringify(map));\n    fetch(`${C.GRAPH_FORM}`, {\n      body: formData,\n      method: \"POST\",\n      mode: \"no-cors\"\n    })\n      .then((r) => setSaving(false))\n      .catch((r) => setSaving(false));\n  };\n\n  const getGraph = async (padron, carrera) => {\n    const data = await fetch(\n      `${C.SPREADSHEET}/${C.SHEETS.registros}!B:D?majorDimension=COLUMNS&key=${C.KEY}`\n    )\n      .then((res) => res.json())\n      .then((res) => (!res.error ? res.values : null));\n    if (!data) return;\n\n    const padrones = data[0];\n    const carreras = data[1];\n    const maps = data[2];\n\n    const indexes = [];\n    let j = -1;\n    while ((j = padrones.indexOf(padron, j + 1)) !== -1) {\n      indexes.push(j);\n    }\n\n    const allLogins = [];\n    for (let i = 0; i < indexes.length; i++) {\n      allLogins.push({\n        carreraid: carreras[indexes[i]],\n        map: maps[indexes[i]],\n      });\n    }\n\n    const map = allLogins.find((l) => l.carreraid === carrera)?.map || \"{}\";\n    return JSON.parse(map);\n  };\n\n  const register = async (p) => {\n    const formData = new FormData();\n    const padron = p || user.padron;\n    const carreraid = user.carrera.id;\n    const orientacionid = user.orientacion?.nombre;\n    const findecarreraid = user.finDeCarrera?.id;\n    formData.append(`${C.USER_FORM_ENTRIES.padron}`, padron);\n    formData.append(`${C.USER_FORM_ENTRIES.carrera}`, carreraid);\n    formData.append(`${C.USER_FORM_ENTRIES.orientacion}`, orientacionid || \"\");\n    formData.append(\n      `${C.USER_FORM_ENTRIES.finDeCarrera}`,\n      findecarreraid || \"\"\n    );\n    fetch(`${C.USER_FORM}`, {\n      body: formData,\n      method: \"POST\",\n      mode: \"no-cors\"\n    });\n\n    const carrera = CARRERAS.find((c) => c.id === carreraid);\n\n    const addToAllLogins = () => {\n      const newAllLogins = user.allLogins.filter(\n        (l) => l.carreraid !== carreraid\n      );\n      newAllLogins.push({\n        carreraid,\n        orientacionid,\n        findecarreraid,\n      });\n      return newAllLogins;\n    };\n\n    if (!logged) {\n      setUser({\n        padron,\n        carrera,\n        orientacion: carrera.orientaciones?.find(\n          (c) => c.nombre === orientacionid\n        ),\n        finDeCarrera: carrera.finDeCarrera?.find(\n          (c) => c.id === findecarreraid\n        ),\n        allLogins: [...addToAllLogins()],\n      });\n      window.localStorage.setItem(\"padron\", padron);\n    } else {\n      setUser({\n        ...user,\n        allLogins: [...addToAllLogins()],\n      });\n    }\n  };\n\n  const logout = () => {\n    setUser({ ...user, padron: \"\" });\n    window.localStorage.removeItem(\"padron\");\n  };\n\n  const submitBug = (bug) => {\n    if (!bug) return;\n    const formData = new FormData();\n    const padron = user.padron;\n    const carreraid = user.carrera?.id;\n    const orientacionid = user.orientacion?.nombre;\n    const findecarreraid = user.finDeCarrera?.id;\n    formData.append(`${C.BUGS_FORM_ENTRIES.padron}`, padron);\n    formData.append(`${C.BUGS_FORM_ENTRIES.carrera}`, carreraid);\n    formData.append(`${C.BUGS_FORM_ENTRIES.orientacion}`, orientacionid || \"\");\n    formData.append(\n      `${C.BUGS_FORM_ENTRIES.finDeCarrera}`,\n      findecarreraid || \"\"\n    );\n    formData.append(`${C.BUGS_FORM_ENTRIES.bug}`, bug || \"\");\n    fetch(`${C.BUGS_FORM}`, {\n      body: formData,\n      method: \"POST\",\n    });\n  };\n\n  return {\n    user,\n    logged,\n    login,\n    loading,\n    register,\n    logout,\n    saving,\n    postGraph,\n    submitBug,\n    setUser,\n    getGraph,\n    padronInput,\n    setPadronInput,\n  };\n};\n\nexport default useLogin;\n","import { ChakraProvider, ColorModeScript, CSSReset } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MainApp from \"./components/MainApp\";\nimport { GraphContext, UserContext } from \"./Contexts\";\nimport { customTheme } from \"./theme\";\nimport useGraph from \"./useGraph\";\nimport useLogin from \"./useLogin\";\n\nconst App = () => {\n  const loginHook = useLogin();\n  const graphHook = useGraph(loginHook);\n\n  return (\n    <UserContext.Provider value={loginHook}>\n      <GraphContext.Provider value={graphHook}>\n        <MainApp />\n      </GraphContext.Provider>\n    </UserContext.Provider>\n  );\n};\n\nReactDOM.render(\n  <ChakraProvider theme={customTheme}>\n    <CSSReset />\n    <ColorModeScript initialColorMode={customTheme.config.initialColorMode} />\n    <App />\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}